{"version":3,"sources":["../node_modules/@ionic/pwa-elements/dist/esm-es5 lazy /^/.//.*/.entry/.js$/ include: //.entry/.js$/ exclude: //.system/.entry/.js$/ groupOptions: {} namespace object","components/Menu.tsx","components/HomeContent.tsx","simulation-schema/js/Validator.js","simulation-schema/js/Schema.js","simulation-schema/js/User.js","simulation-schema/js/IdRequest.js","simulation-schema/js/IdResponse.js","simulation-schema/js/State.js","simulation-schema/js/UserResponse.js","simulation-schema/js/Effect.js","simulation-schema/js/FrameModification.js","simulation-schema/js/SimulationModification.js","util/Backend.js","components/FactoryContent.tsx","components/AboutContent.tsx","components/AccountContent.tsx","components/PlayerContent.tsx","components/SignInContent.tsx","pages/Page.tsx","App.tsx","serviceWorkerRegistration.ts","reportWebVitals.ts","index.tsx","../node_modules/@ionic/core/dist/esm-es5 lazy /^/.//.*/.entry/.js$/ groupOptions: {} namespace object","../node_modules/ionicons/dist/esm lazy /^/.//.*/.entry/.js$/ include: //.entry/.js$/ exclude: //.system/.entry/.js$/ groupOptions: {} namespace object"],"names":["map","webpackAsyncContext","req","__webpack_require__","o","Promise","resolve","then","e","Error","code","ids","id","keys","Object","module","exports","appPages","title","url","iosIcon","homeOutline","mdIcon","homeSharp","addCircleOutline","addCircleSharp","caretForwardCircleOutline","caretForwardCircleSharp","logInOutline","logInSharp","personCircleOutline","personCircleSharp","informationCircleOutline","Menu","location","useLocation","contentId","type","appPage","index","autoHide","className","pathname","routerLink","routerDirection","lines","detail","slot","ios","md","HomeContent","color","Ajv","coerceTypes","Schema","json","parsedObject","JSON","parse","this","Validate","schemaObject","Validator","validate","schema","name","stringify","errors","addSchema","User","UserSchema","RegisterSchema","call","IdRequest","IdRequestSchema","IdResponse","IdResponseSchema","State","FromJSON","StateSchema","UserResponse","UserResponseSchema","Effect","EffectSchema","FrameModification","FrameModificationSchema","SimulationModification","SimulationModificationSchema","server_url","process","request","callback","a","Post","simulationModification","backendProcedure","requestValidator","responseValidator","fetch_url","fetch_body","method","headers","Headers","body","fetch","response","ok","text","status","statusText","FactoryContent","useState","setTitle","desc","setDesc","numPlayers","setNumPlayers","playerResponseString","setPlayerResponseString","playerTitle","setPlayerTitle","resource","equation","resourceValue","resourcesState","setResourcesState","userResourcesState","setUserResourcesState","equationState","setEquationState","numRounds","setNumRounds","question","setQuestion","profitMultiplier","setProfitMultiplier","decisionWeight","setDecisionWeight","impactMultiplier","setImpactMultiplier","factorySlides","useRef","document","createElement","responseValue","setResponseValue","appendEquationState","newValue","prevState","concat","updateValues","console","log","handleNext","current","slideNext","handlePrev","slidePrev","ref","pager","options","slidesPerView","initialSlide","onIonSlideDidChange","position","value","onIonChange","onClick","newPlayerCount","responseString","i","push","handlePlayerChange","parseInt","newResource","slice","changeResourceName","changeResourceValue","deleteResource","icon","trashOutline","length","appendResources","changeUserResourceName","changeUserResourceValue","deleteUserResource","appendUserResources","changeResponseValue","deleteResponseValue","newResponse","appendResponses","playerResponse","operator","changeEquationState","InitializeSimulation","responseValueJSON","resourceStateJSON","userResourceStateJSON","ModifySimulation","afterInit","AboutContent","href","class","AccountContent","placeholder","PlayerContent","username","setUsername","password","setPassword","simulation_id","setSimulationID","responses","setResponses","currentRounds","pastUsers","SimJson","playerSlides","next","doRefresh","setTimeout","alert","onEnded","prompt","createOptions","user_id","error","SubmitRes","SignInContent","Page","useParams","param","find","fullscreen","App","animated","path","exact","to","Boolean","window","hostname","match","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","defineCustomElements","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.3c64acba.chunk.js","sourcesContent":["var map = {\n\t\"./pwa-action-sheet.entry.js\": [\n\t\t195,\n\t\t59\n\t],\n\t\"./pwa-camera-modal-instance.entry.js\": [\n\t\t196,\n\t\t60\n\t],\n\t\"./pwa-camera-modal.entry.js\": [\n\t\t197,\n\t\t61\n\t],\n\t\"./pwa-camera.entry.js\": [\n\t\t198,\n\t\t62\n\t],\n\t\"./pwa-toast.entry.js\": [\n\t\t199,\n\t\t63\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 145;\nmodule.exports = webpackAsyncContext;","import {\n  IonContent,\n  IonIcon,\n  IonItem,\n  IonLabel,\n  IonList,\n  IonListHeader,\n  IonMenu,\n  IonMenuToggle,\n  IonNote,\n} from '@ionic/react';\n\nimport { useLocation } from 'react-router-dom';\nimport { addCircleOutline, addCircleSharp, archiveOutline, archiveSharp, bookmarkOutline, caretForwardCircleOutline, caretForwardCircleSharp, caretForwardSharp, heartOutline, heartSharp, homeOutline, homeSharp, informationCircleOutline, logInOutline, logInSharp, mailOutline, mailSharp, paperPlaneOutline, paperPlaneSharp, personCircleOutline, personCircleSharp, trashOutline, trashSharp, warningOutline, warningSharp } from 'ionicons/icons';\nimport './Menu.css';\n\ninterface AppPage {\n  url: string;\n  iosIcon: string;\n  mdIcon: string;\n  title: string;\n}\n\nconst appPages: AppPage[] = [\n  {\n    title: 'Home',\n    url: '/page/home',\n    iosIcon: homeOutline,\n    mdIcon: homeSharp\n  },\n  {\n    title: 'Create Simulation',\n    url: '/page/factory',\n    iosIcon: addCircleOutline,\n    mdIcon: addCircleSharp\n  },\n  {\n    title: 'Join Simulation',\n    url: '/page/player',\n    iosIcon: caretForwardCircleOutline,\n    mdIcon: caretForwardCircleSharp\n  },\n  {\n    title: 'Login & Create Account',\n    url: '/page/loginsignup',\n    iosIcon: logInOutline,\n    mdIcon: logInSharp\n  },\n  {\n    title: 'Your Account',\n    url: '/page/account',\n    iosIcon: personCircleOutline,\n    mdIcon: personCircleSharp\n  },\n  {\n    title: 'About',\n    url: '/page/about',\n    iosIcon: informationCircleOutline,\n    mdIcon: informationCircleOutline\n  }\n];\n\nconst Menu: React.FC = () => {\n  const location = useLocation();\n\n  return (\n    <IonMenu contentId=\"main\" type=\"overlay\">\n      <IonContent>\n        <IonList id=\"page-list\">\n          <IonListHeader>YCP Social Dilemma</IonListHeader>\n          {appPages.map((appPage, index) => {\n            return (\n              <IonMenuToggle key={index} autoHide={false}>\n                <IonItem className={location.pathname === appPage.url ? 'selected' : ''} routerLink={appPage.url} routerDirection=\"none\" lines=\"none\" detail={false}>\n                  <IonIcon slot=\"start\" ios={appPage.iosIcon} md={appPage.mdIcon} />\n                  <IonLabel>{appPage.title}</IonLabel>\n                </IonItem>\n              </IonMenuToggle>\n            );\n          })}\n        </IonList>\n      </IonContent>\n    </IonMenu>\n  );\n};\n\nexport default Menu;\n","import { IonButton, IonCard, IonCardContent, IonCardHeader, IonCardTitle, IonCol, IonContent, IonGrid, IonItem, IonLabel, IonList, IonRippleEffect, IonRow } from \"@ionic/react\";\nimport React from \"react\";\n\nimport './HomeContent.css';\n\nconst HomeContent: React.FC = () => {\n    return (\n    <IonContent className=\"ion-padding\">\n        <IonGrid>\n            <IonRow className=\"ion-justify-content-center\">\n                <IonCol className=\"ion-text-center\">\n                    <IonCard>\n                        <IonCardHeader color=\"primary\">\n                            <IonCardTitle>Simulation Factory</IonCardTitle>\n                        </IonCardHeader>\n                        <IonCardContent>\n                            <IonList lines=\"none\">\n                                <IonItem>\n                                    <IonLabel className=\"ion-text-center\">Create your simulation</IonLabel>\n                                </IonItem>\n                                <IonItem>\n                                    <IonLabel className=\"ion-text-center\">Run your simulation real-time or asynchronous</IonLabel>\n                                </IonItem>\n                                <IonItem>\n                                    <IonLabel className=\"ion-text-center\">Get analytics and feedback from participants</IonLabel>\n                                </IonItem>\n                            </IonList>                     \n                            <IonButton routerLink=\"/page/factory\" routerDirection=\"root\">\n                                Create Simulation\n                                <IonRippleEffect></IonRippleEffect>\n                            </IonButton>\n                        </IonCardContent>\n                    </IonCard>\n                </IonCol>\n                <IonCol className=\"ion-text-center\">\n                    <IonCard>\n                        <IonCardHeader color=\"primary\">\n                            <IonCardTitle>Join Simulation</IonCardTitle>\n                        </IonCardHeader>\n                        <IonCardContent>\n                        <IonList lines=\"none\">\n                                <IonItem>\n                                    <IonLabel className=\"ion-text-center\">Participate in Simulation</IonLabel>\n                                </IonItem>\n                                <IonItem>\n                                    <IonLabel className=\"ion-text-center\">Join with partner or play solo</IonLabel>\n                                </IonItem>\n                                <IonItem>\n                                    <IonLabel className=\"ion-text-center\">Contribute to research studies</IonLabel>\n                                </IonItem>\n                            </IonList>\n                            <IonButton className='playerButton'>\n                                Join Simulation\n                                <IonRippleEffect></IonRippleEffect>\n                            </IonButton>\n                        </IonCardContent>\n                    </IonCard>\n                </IonCol>\n            </IonRow>\n        </IonGrid>\n    </IonContent>\n    );\n};\n\nexport default HomeContent;","import Ajv from 'ajv';\nexport default new Ajv({coerceTypes: true});","import Validator from \"./Validator.js\";\n\n// Base class for all schemas\nexport default class Schema {\n    static schema = {};\n    static FromJSON(json) {\n        let parsedObject = JSON.parse(json);\n        return this.Validate(parsedObject);\n    }\n    static Validate(schemaObject) {\n        if(Validator.validate(this.schema, schemaObject)) {\n            return schemaObject;\n        } else {\n            throw new Error(`JavaScript object failed validation against schema ${this.name}.\n                             Error: ${JSON.stringify(Validator.errors)}.\n                             Object: ${JSON.stringify(schemaObject)}`);\n        }    \n    }\n    static RegisterSchema() {\n        Validator.addSchema(this.schema);\n    }\n}","import Schema from \"../js/Schema.js\";\nimport UserSchema from \"../schema/User.json\";\n\n// Schema that represents the user\nexport default class User extends Schema {\n    static schema = UserSchema;\n}\nSchema.RegisterSchema.call(User);","import Schema from \"./Schema.js\";\nimport IdRequestSchema from \"../schema/IdRequest.json\";\n\n// Imports for side-effects\nimport User from \"../js/User.js\"; \n\nexport default class IdRequest extends Schema {\n    static schema = IdRequestSchema;\n}\nSchema.RegisterSchema.call(IdRequest);","import Schema from \"./Schema.js\";\nimport IdResponseSchema from \"../schema/IdResponse.json\";\n\nexport default class IdResponse extends Schema {\n    static schema = IdResponseSchema;\n}\nSchema.RegisterSchema.call(IdResponse);","import Schema from \"../js/Schema.js\";\nimport StateSchema from \"../schema/State.json\";\n\n// Schema that represents the simulation's state\nexport default class State extends Schema {\n    static schema = StateSchema;\n\n    // TODO: If user_waiting == false, add the other properties to the required array, and re-validate\n    static FromJSON(json) {\n        return Schema.FromJSON.call(this, json);\n    }\n}\nSchema.RegisterSchema.call(State);","import Schema from \"../js/Schema.js\";\nimport UserResponseSchema from \"../schema/UserResponse.json\";\n\n// Imports for side-effects\nimport User from \"../js/User\"; \n\nexport default class UserResponse extends Schema {\n    static schema = UserResponseSchema;\n}\nSchema.RegisterSchema.call(UserResponse);","import Schema from \"./Schema.js\";\nimport EffectSchema from \"../schema/Effect.json\";\n\nexport default class Effect extends Schema {\n    static schema = EffectSchema;\n}\nSchema.RegisterSchema.call(Effect);","import Schema from \"./Schema.js\";\nimport FrameModificationSchema from \"../schema/FrameModification.json\";\n\n// Import for side-effects\nimport User from './User.js';\nimport Effect from './Effect.js';\n\nexport default class FrameModification extends Schema {\n    static schema = FrameModificationSchema;\n}\nSchema.RegisterSchema.call(FrameModification);","import Schema from \"./Schema.js\";\nimport SimulationModificationSchema from \"../schema/SimulationModification.json\";\n\n// Imports for side-effects\nimport User from \"../js/User.js\"; \n\nexport default class SimulationModification extends Schema {\n    static schema = SimulationModificationSchema;\n}\nSchema.RegisterSchema.call(SimulationModification);","import IdRequest from \"../simulation-schema/js/IdRequest\";\nimport IdResponse from \"../simulation-schema/js/IdResponse\";\nimport State from \"../simulation-schema/js/State\";\nimport User from \"../simulation-schema/js/User\";\nimport UserResponse from \"../simulation-schema/js/UserResponse\";\nimport FrameModification from \"../simulation-schema/js/FrameModification\";\nimport Effect from \"../simulation-schema/js/Effect\";\nimport SimulationModification from \"../simulation-schema/js/SimulationModification\";\n\nlet server_url = process.env.REACT_APP_SIMULATION_FACTORY_URL;\n\n// Executes the BeginSim procedure on the backend\n// Args:\n//      request (object): The request to POST to the backend\n//      callback (object): The callback to execute once the backend responds.\n//                         This callback accepts no arguments.\nexport async function BeginSim(request, callback) {\n    Post(request, callback, 'BeginSim', IdRequest);\n}\n\n// Executes the GetSimState procedure on the backend\n// Args:\n//      request (object): The request to POST to the backend\n//      callback (object): The callback to execute once the backend responds.\n//                         This callback accepts one State argument.\nexport async function GetState(request, callback) {\n    Post(request, callback, 'GetSimState', IdRequest, State);\n}\n\n// Executes the SubmitResponse procedure on the backend\n// Args:\n//      request (object): The request to POST to the backend\n//      callback (object): The callback to execute once the backend responds.\n//                         This callback accepts no arguments.\nexport async function SubmitResponse(request, callback) {\n    Post(request, callback, 'SubmitResponse', UserResponse);\n}\n\n// Executes the CheckCredentials procedure on the backend\n// Args:\n//      request (object): The request to POST to the backend\n//      callback (object): The callback to execute once the backend responds.\n//                         This callback accepts no arguments.\nexport async function CheckCredentials(request, callback) {\n    Post(request, callback, 'CheckCredentials', User);\n}\n\n// Executes the SimulationInitialization procedure on the backend\n// Args:\n//      request (object): The request to POST to the backend\n//      callback (object): The callback to execute once the backend responds.\n//                         This callback accepts one IdResponse argument.\nexport async function InitializeSimulation(request, callback) {\n    Post(request, callback, 'SimulationInitialization', User, IdResponse);\n}\n\n// Executes the FrameInitialization procedure on the backend\n// Args:\n//      request (object): The request to POST to the backend\n//      callback (object): The callback to execute once the backend responds.\n//                         This callback accepts one IdResponse argument.\nexport async function InitializeFrame(request, callback) {\n    Post(request, callback, 'FrameInitialization', IdRequest, IdResponse);\n}\n\n/**\n *  Modifies a frame\n * @param {object} frameModification The request to POST to the backend\n * @param {object} callback The callback to execute once the backend responds.\n */\nexport async function ModifyFrame(frameModification, callback) {\n    Post(frameModification, callback, 'FrameModification', FrameModification);\n}\n\n/**\n * Modifies a simulation\n * @param {object} simulationModifcation The request to POST to the backend\n * @param {object} callback The callback to execute once the backend responds.\n */\nexport async function ModifySimulation(simulationModification, callback) {\n    Post(simulationModification, callback, 'SimulationModification', SimulationModification);\n}\n\n// Private method to issue a POST request to the backend\n// Args:\n//      request (object): The request object to post\n//      callback (function): The function to call once the backend responds. \n//                           If responseValidator is null, the callback is called with no argument.\n//                           Otherwise, the callback is called with the backend's reponse as an argument\n//      backendProcedure (string): The procedure to request the backend to perform\n//      requestValidator (class): The validator class to use on the request object\n//      responseValidator (class): The validator class to use on the backend's response.\n//                                 If null, the callback is called with no argument. Defaults to null.\nasync function Post(request, callback, backendProcedure, requestValidator, responseValidator=null) {\n    requestValidator.Validate(request);\n    let fetch_url = `${server_url}/${backendProcedure}`;\n    let fetch_body = {\n        method: \"POST\",\n        headers: new Headers({'content-type': 'application/json'}),\n        body: JSON.stringify(request)\n    };\n    let response = await fetch(fetch_url, fetch_body);\n    if (response.ok) {\n        if (responseValidator == null) {\n            callback();\n        } else {\n            callback(responseValidator.FromJSON(await response.text()));\n        }\n    } else {\n        throw new Error(`Error ${response.status}: ${response.statusText}`)\n    }\n}","import { IonButton, IonCard, IonChip, IonCol, IonContent, IonGrid, IonIcon, IonInput, IonItem, IonLabel, IonList, IonListHeader, IonRadio, IonRow, IonSlide, IonSlides, IonTextarea } from \"@ionic/react\";\nimport React, { useRef, useState} from \"react\";\n\n\nimport './FactoryContent.css';\n\nimport {  trashOutline } from \"ionicons/icons\";\nimport { InitializeSimulation, ModifySimulation } from \"../util/Backend.js\";\n\n\nconst FactoryContent: React.FC = () => {\n    const [title,setTitle] = useState<string>();\n    const [desc,setDesc] = useState<string>();\n    const [numPlayers, setNumPlayers] = useState<number>(0);\n    const [playerResponseString, setPlayerResponseString] = useState([\n        'Player 1 Response'\n    ])\n    const [playerTitle, setPlayerTitle] = useState<string>();\n    const [resourcesState, setResourcesState] = useState([\n        {\n            resource: 'Resource 1',\n            equation: 'NULL',\n            resourceValue: 0\n        }\n    ]);\n    const [userResourcesState, setUserResourcesState] = useState([\n        {\n            resource: 'User Resource 1',\n            equation: 'NULL',\n            resourceValue: 0\n        }\n    ]);\n    const [equationState, setEquationState] = useState([\n        {\n            equation:''\n        }\n    ]);\n    const [numRounds, setNumRounds] = useState<number>(1);\n    const [question, setQuestion] = useState('')\n\n    const [profitMultiplier, setProfitMultiplier] = useState<number>(1);\n    const [decisionWeight, setDecisionWeight] = useState<number>(1);\n    const [impactMultiplier, setImpactMultiplier] = useState<number>(1);\n    \n    const factorySlides = useRef(document.createElement('ion-slides'));\n\n    const slideOpts = {\n        slidesPerView: 1,\n        initialSlide: 0\n    };\n    const [responseValue, setResponseValue] =useState([{\n        response: 'Repsonse 1',\n        responseValue: '0'\n    }])\n\n    const operators = ['+','-','*','/','=',]\n\n    function appendResources(){\n        var newResource = `Resource ${resourcesState.length + 1}`;\n        var newResourceValue = 0;\n        setResourcesState(prevState => (prevState.concat({resource:newResource, equation:'NULL', resourceValue:newResourceValue})));\n    }\n    function deleteResource(index: number){\n        delete resourcesState[index];\n        setResourcesState(prevState => prevState.slice(0));\n    }\n\n    function changeResourceName(index: number, newResource: string){\n        resourcesState[index] = {resource:newResource, equation:'NULL',resourceValue:resourcesState[index].resourceValue}\n        //Needed to refresh Chips\n        setResourcesState(prevState => prevState.slice(0));\n    }\n\n    function changeResourceValue(index: number, newValue: number){\n        resourcesState[index] = {resource:resourcesState[index].resource, equation:'NULL', resourceValue:newValue}\n        //Needed to refresh Chips\n        setResourcesState(prevState => prevState.slice(0));\n    }\n\n    function appendUserResources(){\n        var newResource = `User Resource ${userResourcesState.length + 1}`;\n        var newResourceValue = 0;\n        setUserResourcesState(prevState => (prevState.concat({resource:newResource, equation:'NULL', resourceValue:newResourceValue})));\n    }\n    function deleteUserResource(index: number){\n        delete userResourcesState[index];\n        setUserResourcesState(prevState => prevState.slice(0));\n    }\n\n    function changeUserResourceName(index: number, newResource: string){\n        userResourcesState[index] = {resource:newResource, equation:'NULL',resourceValue:userResourcesState[index].resourceValue}\n        //Needed to refresh Chips\n        setUserResourcesState(prevState => prevState.slice(0));\n    }\n\n    function changeUserResourceValue(index: number, newValue: number){\n        userResourcesState[index] = {resource:userResourcesState[index].resource, equation:'NULL', resourceValue:newValue}\n        //Needed to refresh Chips\n        setUserResourcesState(prevState => prevState.slice(0));\n    }\n\n    function appendResponses(){\n        var newResponse = `Response ${responseValue.length +1}`;\n        var newResponseValue = '0';\n        setResponseValue(prevState=>prevState.concat({response:newResponse, responseValue:newResponseValue}));\n    }\n\n    function changeResponseValue(index:number, newValue:string){\n        responseValue[index].responseValue = newValue;\n    }\n\n    function deleteResponseValue(index:number){\n        delete responseValue[index];\n        setResponseValue(prevState => prevState.slice(0));\n    }\n\n    function changeEquationState(index:number, newValue:string){\n        equationState[index] = {equation:newValue};\n        setEquationState(prevState => prevState.slice(0));\n    }\n    function appendEquationState(newValue:string){\n        setEquationState(prevState => prevState.concat({equation:newValue}));\n    }\n\n    function handlePlayerChange(newPlayerCount: number){\n        setNumPlayers(newPlayerCount);\n        console.log(numPlayers);\n        var responseString = [`Player 1 Response`];\n        for(let i = 1; i < newPlayerCount; i++){\n            responseString.push(`Player ${i+1} Response`);\n        }\n        console.log(responseString);\n        setPlayerResponseString(responseString);\n        console.log(playerResponseString);\n    }\n\n    function updateValues(){\n        console.log(\"METHOD RAN\");\n        setTitle(title);\n        setDesc(desc);\n        setNumPlayers(numPlayers);\n        setPlayerTitle(playerTitle);\n        setResourcesState(resourcesState);\n        setNumRounds(numRounds);\n        setQuestion(question);\n        setProfitMultiplier(profitMultiplier);\n        setDecisionWeight(decisionWeight);\n        setImpactMultiplier(impactMultiplier);\n    }\n\n    const handleNext = () => {\n        updateValues();\n        factorySlides.current.slideNext();\n    }\n\n    const handlePrev = () => {\n        updateValues();\n        factorySlides.current.slidePrev();\n    }\n\n    function handleSubmitClick(){\n        console.log(\"HANDLE SUBMIT CLICK\");\n        InitializeSimulation({\"username\":\"foo\", \"password\":\"P00%qwert\"},(response)=>afterInit(response));\n\n    }\n    function afterInit(response){\n        console.log(\"AFTER INIT\");\n        // var responseValueString = JSON.stringify(Object.assign({}, responseValue));\n        // var responseValueJSON = JSON.parse(responseValueString);\n        // var resourceStateString = JSON.stringify(Object.assign({}, resourcesState));\n        // var resourceStateJSON = JSON.parse(resourceStateString);\n        // var userResourceStateString = JSON.stringify(Object.assign({}, userResourcesState));\n        // var userResourceStateJSON = JSON.parse(userResourceStateString);\n        // console.log(\"RESPONSEVALUE: \" + responseValueString + \", \\n RESOURCESTATE: \" + resourceStateString + \",\\n USERRESOURCESTATE: \" + userResourceStateString);\n\n        var responseValueJSON = {\n            \"response1\":\"-10\",\n            \"response2\":\"-5\",\n            \"response3\":\"0\",\n            \"response4\":\"5\",\n            \"response5\":\"10\",\n        }\n\n        var resourceStateJSON = {\n            \"Resource 1\":{\"name\":\"Trees\", \"equation\":\"null\",\"starting_value\":0},\n            \"Resource 2\":{\"name\":\"Money\", \"equation\":\"null\",\"starting_value\":10},\n            \"Resource 3\":{\"name\":\"People\", \"equation\":\"null\",\"starting_value\":100}\n        }\n\n        var userResourceStateJSON = {\n            \"Resource 1\":{\"name\":\"Trees\", \"equation\":\"null\",\"starting_value\":0},\n            \"Resource 2\":{\"name\":\"Money\", \"equation\":\"null\",\"starting_value\":10},\n            \"Resource 3\":{\"name\":\"People\", \"equation\":\"null\",\"starting_value\":100},\n        }\n\n        var modifySimJson = {\n            \"user\":{\"username\":\"foo\", \"password\":\"P00%qwert\"},\n            \"id\":response.id,\n            \"response_timeout\":1,\n            \"prompt\":question,\n            \"responses\":responseValueJSON,\n            \"round_count\":numRounds,\n            \"user_count\":numPlayers,\n            \"resources\":resourceStateJSON,\n            \"user_resources\": userResourceStateJSON\n        };\n        ModifySimulation(modifySimJson, ()=>{console.log(\"MODIFY SIMULATION RAN\")});\n    }\n    \n    return (\n    <IonContent className=\"ion-padding\">\n        <IonSlides ref={factorySlides} pager={true} options={slideOpts} onIonSlideDidChange={()=>updateValues}>\n            <IonSlide>\n                <IonCard className=\"container\">\n                    <IonList>\n                        <IonListHeader>\n                            <IonLabel><strong>Simulation Title</strong></IonLabel>\n                        </IonListHeader>\n                        <IonItem>\n                            <IonLabel position=\"floating\">Simulation Title</IonLabel>\n                            <IonInput value={title} onIonChange={e => setTitle(e.detail.value!)}></IonInput>\n                        </IonItem>\n                        <IonListHeader>\n                            <IonLabel><strong>Simulation Description</strong></IonLabel>\n                        </IonListHeader>\n                        <IonItem>\n                            <IonLabel position=\"floating\">Simulation Description</IonLabel>\n                            <IonTextarea value={desc} onIonChange={e => setDesc(e.detail.value!)}></IonTextarea>\n                        </IonItem>\n                    </IonList>\n                    <IonButton onClick={() => handleNext()}>Next Slide</IonButton>\n                </IonCard>\n            </IonSlide>\n            <IonSlide>\n                <IonCard className=\"container\">\n                    <IonList>\n                        <IonListHeader>\n                            <IonLabel><strong>Number of Players</strong></IonLabel>\n                        </IonListHeader>\n                        <IonItem>\n                            <IonLabel position=\"floating\">Number of Players</IonLabel>\n                            <IonInput type=\"number\" value={numPlayers} onIonChange={e => handlePlayerChange(parseInt(e.detail.value!, 10))}></IonInput>\n                        </IonItem>\n                        <IonListHeader>\n                            <IonLabel><strong>Player Title</strong></IonLabel>\n                        </IonListHeader>\n                        <IonItem>\n                            <IonLabel position=\"floating\">Player Title</IonLabel>\n                            <IonInput value={playerTitle} onIonChange={e => setPlayerTitle(e.detail.value!)}></IonInput>\n                        </IonItem>\n                    </IonList>\n                    <IonButton onClick={() => handlePrev()}>Previous Slide</IonButton>\n                    <IonButton onClick={() => handleNext()}>Next Slide</IonButton>\n                </IonCard>\n            </IonSlide>\n            <IonSlide>\n                <IonCard className=\"container\">\n                    <IonGrid>\n                        <IonRow>\n                            <IonCol><IonLabel><strong>Global Resources</strong></IonLabel></IonCol>\n                        </IonRow>\n                        <IonRow>\n                            <IonCol><IonLabel position=\"floating\">Name of Global Resource</IonLabel></IonCol>\n                            <IonCol><IonLabel position=\"floating\">Value of Global Resource</IonLabel></IonCol>\n                        </IonRow>\n                        <IonRow>\n                            <IonCol>{resourcesState.map((resource,index) =><IonItem><IonInput value={resource.resource} onIonChange={e => changeResourceName(index, e.detail.value!)}></IonInput><IonInput type=\"number\" onIonChange={e => changeResourceValue(index, parseInt(e.detail.value!, 10))}></IonInput><IonButton onClick={() => deleteResource(index)}><IonIcon slot=\"icon-only\" icon={trashOutline} /></IonButton></IonItem>)}</IonCol>\n                        </IonRow>    \n                        <IonRow><IonButton onClick={ () => appendResources()}>Add Global Resource</IonButton></IonRow>\n                        <IonRow>\n                            <IonCol><IonLabel><strong>User Resources</strong></IonLabel></IonCol>\n                        </IonRow>\n                        <IonRow>\n                            <IonCol><IonLabel position=\"floating\">Name of User Resource</IonLabel></IonCol>\n                            <IonCol><IonLabel position=\"floating\">Value of User Resource</IonLabel></IonCol>\n                        </IonRow>\n                        <IonRow>\n                            <IonCol>{userResourcesState.map((resource, index) =><IonItem><IonInput value={resource.resource} onIonChange={e => changeUserResourceName(index, e.detail.value!)}></IonInput><IonInput type=\"number\" onIonChange={e => changeUserResourceValue(index, parseInt(e.detail.value!, 10))}></IonInput><IonButton onClick={() => deleteUserResource(index)}><IonIcon slot=\"icon-only\" icon={trashOutline} /></IonButton></IonItem>)}</IonCol>\n                        </IonRow>    \n                        <IonRow><IonButton onClick={ () => appendUserResources()}>Add User Resource</IonButton></IonRow>\n\n                    </IonGrid>\n                    <IonButton onClick={() => handlePrev()}>Previous Slide</IonButton>\n                    <IonButton onClick={() => handleNext()}>Next Slide</IonButton>\n                </IonCard>\n            </IonSlide>\n            <IonSlide>\n                <IonCard className=\"container\">\n                    <IonList>\n                        <IonListHeader>\n                            <IonLabel><strong>Number of Rounds</strong></IonLabel>\n                        </IonListHeader>\n                        <IonItem>\n                            <IonLabel position=\"floating\">Number of Rounds</IonLabel>\n                            <IonInput type=\"number\" value={numRounds} onIonChange={e => setNumRounds(parseInt(e.detail.value!, 10))}></IonInput>\n                        </IonItem>\n\n                        <IonItem>\n                            <IonLabel position=\"floating\">Question to Display during Round</IonLabel>\n                            <IonInput value={question} onIonChange={e => setQuestion(e.detail.value!)}></IonInput>\n                        </IonItem>\n                        <IonItem>\n                            <IonLabel position=\"floating\">Response Values</IonLabel>\n                            {responseValue.map((response, index)=><IonItem><IonLabel>Response {index+1}</IonLabel><IonInput type=\"number\" value={response.responseValue} onIonChange={e => changeResponseValue(index, e.detail.value!)}></IonInput><IonButton onClick={() => deleteResponseValue(index)}><IonIcon slot=\"icon-only\" icon={trashOutline} /></IonButton></IonItem>)}\n                        </IonItem>\n                        <IonButton onClick={() => appendResponses()}>Add Response</IonButton>\n                    </IonList>\n                    <IonButton onClick={() => handlePrev()}>Previous Slide</IonButton>\n                    <IonButton onClick={() => handleNext()}>Next Slide</IonButton>\n                </IonCard>\n            </IonSlide>\n            <IonSlide>\n                <IonCard className=\"container\">\n                    <IonList>\n                        <IonListHeader>\n                            <IonLabel><strong>Variables and Equations</strong></IonLabel>\n                        </IonListHeader>\n                        <IonInput type=\"number\" value={profitMultiplier} onIonChange={e=> setProfitMultiplier(parseInt(e.detail.value!, 10))}>Set Profit Multiplier</IonInput>\n                        <IonInput type=\"number\" value={decisionWeight} onIonChange={e=> setDecisionWeight(parseInt(e.detail.value!, 10))}>Set Decision Weight</IonInput>\n                        <IonInput type=\"number\" value={impactMultiplier} onIonChange={e=> setImpactMultiplier(parseInt(e.detail.value!, 10))}>Set Impact of Resource Multiplier</IonInput>\n                        <IonListHeader>Global Resources</IonListHeader>\n                        {resourcesState.map(resource =><IonChip onClick={()=>appendEquationState(resource.resource)}><IonLabel>{resource.resource}</IonLabel></IonChip>)}\n                        <IonListHeader>User Resources</IonListHeader>\n                        {userResourcesState.map(resource=><IonChip onClick={()=>appendEquationState(resource.resource)}><IonLabel>{resource.resource}</IonLabel></IonChip>)}\n                        <IonListHeader>Player Response</IonListHeader>\n                        {playerResponseString.map(playerResponse=><IonChip onClick={()=>appendEquationState(playerResponse)}><IonLabel>{playerResponse}</IonLabel></IonChip>)}\n                        <IonListHeader>Operations</IonListHeader>\n                        {operators.map(operator=><IonChip onClick={()=>appendEquationState(operator)}><IonLabel>{operator}</IonLabel></IonChip>)}\n                        {equationState.map((equation, index)=><IonInput value={equation.equation} onIonChange={e=> changeEquationState(index, e.detail.value!)}></IonInput>)} \n                    </IonList>\n                    <IonButton onClick={() => handlePrev()}>Previous Slide</IonButton>\n                    <IonButton onClick={() => handleNext()}>Next Slide</IonButton>\n                </IonCard>\n            </IonSlide>\n            <IonSlide>\n                <IonCard>\n                    <IonList>\n                        <IonButton onClick={handleSubmitClick}>Submit Simulation</IonButton>\n                    </IonList>\n                </IonCard>\n            </IonSlide>\n        </IonSlides>\n    </IonContent>\n\n\n    );\n};\n\nexport default FactoryContent;","import { IonButton, IonCard, IonCardContent, IonCardHeader, IonCardTitle, IonCol, IonContent, IonGrid, IonItem, IonLabel, IonList, IonRedirect, IonRippleEffect, IonRouterLink, IonRow } from \"@ionic/react\";\nimport React from \"react\";\n\nimport './AboutContent.css';\n\nconst AboutContent: React.FC = () => {\n    return (\n    <IonContent className=\"ion-padding\">\n        <IonGrid>\n            <IonRow className=\"ion-justify-content-center\">\n                <IonCol className=\"ion-text-center\">\n                    <IonCard>\n                        <IonCardHeader color=\"primary\">\n                            <IonCardTitle>Back End</IonCardTitle>\n                        </IonCardHeader>\n                        <IonCardContent>\n                            <IonList lines=\"none\">\n                                <IonItem>\n                                    <IonLabel className=\"ion-text-left\">Robert Doster</IonLabel>\n                                    <IonRouterLink href=\"https://github.com/rdoster13\" class=\"underline\">Github</IonRouterLink>\n                                </IonItem>\n                                <IonItem>\n                                    <IonLabel className=\"ion-text-left\">Cayden Reynolds</IonLabel>\n                                    <IonRouterLink href=\"https://github.com/caydenreynolds\" class=\"underline\">Github</IonRouterLink>\n                                </IonItem>\n                                <IonItem>\n                                    <IonLabel className=\"ion-text-left\">Austin Canzano</IonLabel>\n                                    <IonRouterLink href=\"https://github.com/Acanzano6613\" class=\"underline\">Github</IonRouterLink> \n                                </IonItem>\n                            </IonList>                     \n                        </IonCardContent>\n                    </IonCard>\n                </IonCol>\n                <IonCol className=\"ion-text-center\">\n                    <IonCard>\n                        <IonCardHeader color=\"primary\">\n                            <IonCardTitle>Front End</IonCardTitle>\n                        </IonCardHeader>\n                        <IonCardContent>\n                        <IonList lines=\"none\">\n                                <IonItem>\n                                    <IonCol>\n                                        <IonLabel className=\"ion-text-left\">Alex Louderback</IonLabel>\n                                    </IonCol>\n\n                                    <IonCol className=\"ion-text-center\">\n                                        <IonRouterLink className=\"ion-text-center\" href=\"https://www.linkedin.com/in/alex-louderback-a2a599149/\">LinkedIn</IonRouterLink>\n                                    </IonCol>\n                                    \n                                    <IonCol className=\"ion-text-right\">\n                                        <IonRouterLink href=\"https://github.com/alouderback\" className=\"underline\">Github</IonRouterLink>\n                                    </IonCol>\n                                </IonItem>\n                                <IonItem>\n                                    <IonCol>\n                                        <IonLabel className=\"ion-text-left\">Adrian Castro</IonLabel>\n                                    </IonCol>\n                \n                                    <IonCol className=\"ion-text-right\">\n                                        <IonRouterLink href=\"https://github.com/acastro7\" className=\"underline\">Github</IonRouterLink>\n                                    </IonCol>\n                                </IonItem>\n                            </IonList>\n                        </IonCardContent>\n                    </IonCard>\n                </IonCol>\n            </IonRow>\n            <IonRow className=\"ion-justify-content-center\">\n                <IonCol className=\"ion-text-center\">\n                    <IonCard>\n                        <IonCardHeader color=\"primary\">\n                            <IonCardTitle>Advisor</IonCardTitle>\n                        </IonCardHeader>\n                        <IonCardContent>\n                            <IonList lines=\"none\">\n                                <IonItem>\n                                    <IonCol>\n                                        <IonLabel className=\"ion-text-left\">Brandon Miller</IonLabel>\n                                    </IonCol>\n                                    <IonCol className=\"ion-text-center\">\n                                        <IonRouterLink href=\"https://www.linkedin.com/in/brandon-m-miller\" class=\"underline\">LinkedIn</IonRouterLink>\n                                    </IonCol>\n                                    <IonCol className=\"ion-text-right\">\n                                        <IonRouterLink href=\"https://github.com/ScratchnSniff0\" class=\"underline\">Github</IonRouterLink> \n                                    </IonCol>\n                                </IonItem>\n                            </IonList>\n                        </IonCardContent>\n                    </IonCard>\n                </IonCol>\n            </IonRow>\n\n            <IonRow className=\"ion-justify-content-center\">\n                <IonCol className=\"ion-text-center\">\n                    <IonCard>\n                        <IonCardHeader color=\"primary\">\n                            <IonCardTitle>About</IonCardTitle>\n                        </IonCardHeader>\n                        <IonCardContent>\n                            <IonList lines=\"none\">\n                                <IonItem>\n                                    <IonLabel className=\"ion-text-center\">Made at York College of Pennsylvania by very hard working students.</IonLabel>\n                                </IonItem>\n                            </IonList>\n                        </IonCardContent>\n                    </IonCard>\n                </IonCol>\n            </IonRow>\n        </IonGrid>\n    </IonContent>\n    );\n};\n\nexport default AboutContent;","import { IonButton, IonCard, IonCardContent, IonCardHeader, IonCardTitle, IonCol, IonContent, IonGrid, IonInput, IonItem, IonLabel, IonList, IonRedirect, IonRippleEffect, IonRouterLink, IonRow } from \"@ionic/react\";\nimport React from \"react\";\nimport { useParams } from 'react-router';\nimport './AccountContent.css';\n\nconst AccountContent: React.FC = () => {\n    //javascript to obtain user's information if they have entered it\n    const email = \"generic@email.com\";\n    const UserID = \"data.username\";\n\n\n    return (\n    <IonContent className=\"ion-padding\">\n        <IonGrid>\n            <IonRow className=\"ion-justify-content-center\">\n                <IonCol className=\"ion-text-center\">\n                    <IonCard>\n                        <IonCardHeader color=\"primary\">\n                            <IonCardTitle>Account Info</IonCardTitle>\n                        </IonCardHeader>\n                        <IonCardContent>\n                            <IonList lines=\"none\">\n\n                                <IonItem>\n                                    <IonLabel className=\"ion-text-left\">User ID:</IonLabel>\n                                    <IonLabel className=\"ion-text-right\">{UserID}</IonLabel>\n                                </IonItem>\n\n                                <IonItem>\n                                    <IonLabel className=\"ion-text-left\">Email:</IonLabel>\n                                    <IonLabel className=\"ion-text-right\">{email}</IonLabel>\n                                </IonItem>\n\n\n                                <IonItem>\n                                    <IonLabel className=\"ion-text-left\">Change Email:</IonLabel>\n                                    <IonInput className=\"ion-text-right\" placeholder=\"New Email\"></IonInput>\n                                </IonItem>\n\n                                <IonItem>\n                                    <IonLabel className=\"ion-text-left\">Password:</IonLabel>\n                                    <IonInput className=\"ion-text-right\" placeholder=\"Password\"></IonInput>\n                                </IonItem>\n\n                            </IonList>\n\n                            <div className=\"ion-text-left\">\n                                <IonButton type=\"submit\" class=\"ion-no-margin\">Submit</IonButton>\n                            </div>                     \n                        </IonCardContent>\n                    </IonCard>\n                </IonCol>\n                <IonCol className=\"ion-text-center\">\n                    <IonCard>\n                        <IonCardHeader color=\"primary\">\n                            <IonCardTitle>Change Password</IonCardTitle>\n                        </IonCardHeader>\n                        <IonCardContent>\n                            <IonList lines=\"none\">\n\n                                <IonItem>\n                                    <IonLabel className=\"ion-text-center\">To change the password you must type in the original password.</IonLabel>\n                                </IonItem>\n\n                                <IonItem>\n                                    <IonCol>\n                                        <IonLabel className=\"ion-text-left\">Original:</IonLabel>\n                                    </IonCol>\n                                    \n                                    <IonCol className=\"ion-text-right\">\n                                        <IonInput placeholder=\"Old Password\"></IonInput>\n                                    </IonCol>\n                                </IonItem>\n\n                                <IonItem>\n                                    <IonCol>\n                                        <IonLabel className=\"ion-text-left\">New Password:</IonLabel>\n                                    </IonCol>\n                \n                                    <IonCol className=\"ion-text-right\">\n                                        <IonInput placeholder=\"New Password\"></IonInput>\n                                    </IonCol>\n                                </IonItem>\n\n                            </IonList>\n                            <div className=\"ion-text-left\">\n                                <IonButton type=\"submit\" class=\"ion-no-margin\">Submit</IonButton>\n                            </div>\n\n                        </IonCardContent>\n                    </IonCard>\n                </IonCol>\n            </IonRow>\n        </IonGrid>\n    </IonContent>\n    );\n};\n\nexport default AccountContent;","import { IonButton, IonCard, IonCardContent, IonRefresher, IonRefresherContent, IonCardHeader, IonInput, IonCardTitle, IonCol, IonContent, IonGrid, IonItem, IonLabel, IonRadioGroup, IonRadio, IonList, IonRippleEffect, IonRow, IonSlide, IonSlides, IonTextarea, IonHeader, IonListHeader } from \"@ionic/react\";\nimport React, {useRef, useState } from \"react\";\n\nimport './PlayerContent.css';\n//import {prompt, user_count, round_count,resources, _id} from './Info.json';\nimport { BeginSim, SubmitResponse } from \"./../util/Backend\";\nimport { RefresherEventDetail } from '@ionic/core';\nimport { chevronDownCircleOutline } from 'ionicons/icons';\n\n\n\nconst PlayerContent: React.FC = () => {\n    //Javascript\n    const [username,setUsername] = useState<string>();\n    const [password, setPassword] = useState<string>();\n    const [simulation_id, setSimulationID] = useState<string>();\n    const [responses, setResponses] = useState<string>();\n    var currentRounds = 2;\n    var pastUsers = 2;\n    var SimJson = {\n        \"turn_number\": 0,\n        \"prompt\": \"prompty mcpromptface\",\n        \"user_id\": \"602d7d0fac624e1924781010\",\n        \"history\": \"\",\n        \"user_history\": \"\",\n        \"user_waiting\": false\n    };\n    \n\nconst userData = {'user':{'username':username, 'password':password}, 'id':simulation_id};\nconst playerSlides = useRef(document.createElement('ion-slides'));\n\nconst next = () =>{\n    playerSlides.current.slideNext();\n}\nfunction previous(){\n    playerSlides.current.slidePrev();\n}\nconst verify = () =>{\n    if ( password === \"Ad3$5asdf\" && username === \"me\"  ) {\n        (simulation_id ===\"a\") ? next() : console.log(\"Error incorrect simulation Id\");\n    }\n    \n    else{\n        console.log(\"Error incorrect simulation Id\");\n    }\n    // StartSim();\n    // next();\n    \n}\n\n//method that dynamically writes all the radio buttons\nfunction createOptions() {\n    var maxRadioButtons = 7;\n    for(var i = 0; i < maxRadioButtons; i++){\n        //loop that writes ion http\n        //close but this completely overwrites the page\n        // document.write(\"Hello world\");\n        // document.write(\"<IonLabel className='ion-text-center'>Enter Your Player credentials</IonLabel>\") \n    }\n}\n\nfunction doRefresh() {\n    console.log('Begin async operation');\n  \n    setTimeout(function(){ alert(\"Hello\"); previous(); }, 3000);\n    //previous();\n  }\n\n\n//'this' doesn't work in ionic .tsx need to find a replacement\n//pass in the in memory version of a json for this, should just be one object\nfunction StartSim(){\n    /*input state variable with response */\n    try{\n        console.log(\"Username is \"+userData.user.username+ \"\\nPassword is \" +userData.user.password+ \"\\nThis is the sim id \" + userData.id);\n        console.log(\"Environment variable \"+ process.env.REACT_APP_SIMULATION_FACTORY_URL);\n        BeginSim( userData, (response) => InitSim(response));\n        //this sends the user data to the database and returns with response\n        //response is an any type variable\n    }\n    catch(error){\n        console.log(\"Invalid User credentials\");\n    }\n}\nfunction InitSim (response){\n    console.log(\"Initilizing Simulation Variables\");\n    SimJson = {\n        \"turn_number\": response.turn_number,\n        \"prompt\": response.prompt,\n        \"user_id\": response.user_id,\n        \"history\": response.history,\n        \"user_history\": response.user_history,\n        \"user_waiting\": response.user_waiting\n    };\n}\n\n//will be used once I get beginSim to work\nfunction SubmitRes (){\n    //empty method\n    var UserResponse = {\n        'user':{'username':username, 'password':password},\n        'simulation_id': SimJson.user_id,\n        'response': responses\n    };\n    try{\n        //SubmitResponse(UserResponse, ()=>{});\n        currentRounds++;\n        pastUsers = 3;\n    }\n    catch(error){\n        console.log(\"Error: Could not submit Response\")\n    }\n\n    //end the method by sending the user to next slide\n    next();\n}\n\n    return (\n    <IonContent className=\"ion-padding\">\n        <IonGrid>   \n            <IonRow className=\"ion-justify-content-center\">\n                <IonCol className=\"ion-text-center\">\n                    <IonSlides ref={playerSlides} onEnded={() => doRefresh()}>\n                        <IonSlide class=\"swiper-no-swiping\">\n\n                            <IonCard className=\"container\">\n                                <IonCardHeader color=\"primary\">\n                                    <IonCardTitle>Simulation Player</IonCardTitle>\n                                </IonCardHeader>\n                                <IonCardContent>\n                                    <IonList lines=\"none\">\n                                        <IonItem>\n                                            <IonLabel className=\"ion-text-center\">Enter Your Player credentials</IonLabel>\n                                        </IonItem>\n                                        <IonItem>\n                                            <IonInput value={username} placeholder=\"Username\"onIonChange={e => setUsername(e.detail.value!)}></IonInput>                                    \n                                        </IonItem>\n\n                                        <IonItem>\n                                            <IonInput value={password} placeholder=\"Password\" onIonChange={e => setPassword(e.detail.value!)}></IonInput>\n                                        </IonItem>\n\n                                        <IonItem>\n                                            <IonInput value={simulation_id} placeholder=\"SimulationID\" onIonChange={e => setSimulationID(e.detail.value!)}></IonInput>\n                                        </IonItem>\n                                        \n                                    </IonList> \n\n                                    <IonButton routerLink=\"/page/player\" routerDirection=\"root\">\n                                        Begin\n                                        <IonRippleEffect></IonRippleEffect>\n                                    </IonButton>\n                                    <IonButton onClick={() => verify()}>Add Resource</IonButton>\n\n                                </IonCardContent>\n                            </IonCard>\n                        </IonSlide>\n\n                        <IonSlide class=\"swiper-no-swiping\">\n                            <IonCard className=\"container\">\n                                <IonCardHeader color=\"primary\">\n                                    <IonCardTitle>Simulation {username} Player</IonCardTitle>\n                                </IonCardHeader>\n                                <IonCardContent>\n                                    <IonList lines=\"none\">\n                                        <IonItem>\n                                            <IonLabel>Simulation Prompt: {SimJson.prompt}</IonLabel>\n                                        </IonItem>\n                                        <IonItem>\n                                            <IonLabel>Current rounds: {currentRounds}</IonLabel>\n                                            <IonLabel>Number of past users: {pastUsers}</IonLabel>\n                                        </IonItem>\n                                                                               \n                                            <IonRadioGroup value={responses} onIonChange={e => setResponses(e.detail.value)}>\n                                            <IonListHeader>\n                                                <IonHeader>Please enter response</IonHeader>\n                                            </IonListHeader>\n                                            {createOptions()}\n\n                                            <IonItem>\n                                                <IonLabel>15</IonLabel>\n                                                <IonRadio slot=\"start\" color=\"tertiary\" value=\"15\"></IonRadio>\n                                            </IonItem>\n                                            <IonItem>\n                                                <IonLabel>10</IonLabel>\n                                                <IonRadio slot=\"start\" color=\"tertiary\" value=\"10\"></IonRadio>\n                                            </IonItem>\n                                            <IonItem>\n                                                <IonLabel>5</IonLabel>\n                                                <IonRadio slot=\"start\" color=\"tertiary\" value=\"5\"></IonRadio>\n                                            </IonItem>\n                                            <IonItem>\n                                                <IonLabel>0</IonLabel>\n                                                <IonRadio slot=\"start\" color=\"tertiary\" value=\"0\"></IonRadio>\n                                            </IonItem>\n                                            <IonItem>\n                                                <IonLabel>-5</IonLabel>\n                                                <IonRadio slot=\"start\" color=\"tertiary\" value=\"-5\"></IonRadio>\n                                            </IonItem>\n                                            <IonItem>\n                                                <IonLabel>-10</IonLabel>\n                                                <IonRadio slot=\"start\" color=\"tertiary\" value=\"-10\"></IonRadio>\n                                            </IonItem>\n                                            <IonItem>\n                                                <IonLabel>-15</IonLabel>\n                                                <IonRadio slot=\"start\" color=\"tertiary\" value=\"-15\"></IonRadio>\n                                            </IonItem>\n                                                \n                                            </IonRadioGroup>        \n                                        \n                                    </IonList>\n                                    <IonButton onClick={() => SubmitRes()}>Submit</IonButton>\n                                </IonCardContent>\n                            </IonCard>\n                        </IonSlide>\n\n                        <IonSlide class=\"swiper-no-swiping\" > \n                            <IonCard className=\"container\">\n                                <IonCardHeader color=\"primary\">\n                                    <IonCardTitle>Please wait on other participating users</IonCardTitle>\n                                     {/*-- Custom Refresher Content --*/}\n                                    <IonContent>\n                                        <IonLabel>{() =>doRefresh()}</IonLabel>\n                                    </IonContent>\n                                </IonCardHeader>\n\n                                \n                            </IonCard>\n                        </IonSlide>\n\n                    </IonSlides>\n\n                </IonCol>\n            </IonRow>\n        </IonGrid>\n    </IonContent>\n    );\n};\n\nexport default PlayerContent;\n","import { IonButton, IonCard, IonCardContent, IonCardHeader, IonCardTitle, IonCol, IonContent, IonInput, IonGrid, IonItem, IonLabel, IonList, IonRippleEffect, IonRow } from \"@ionic/react\";\nimport React from \"react\";\n\nimport './SignInContent.css';\n\nconst SignInContent: React.FC = () => {\n    return (\n    <IonContent className=\"ion-padding\">\n        <IonGrid>\n            <IonRow className=\"ion-justify-content-center\">\n                <IonCol className=\"ion-text-center\">\n                    <IonCard>\n                        <IonCardHeader color=\"primary\">\n                            <IonCardTitle>Login/SignUp</IonCardTitle>\n                        </IonCardHeader>\n                        <IonCardContent>\n                            <IonList lines=\"none\">\n                                <IonItem>\n                                    <IonInput className=\"ion-text-right\" placeholder=\"UserID\"></IonInput>\n                                </IonItem>\n\n                                <IonItem>\n                                    <IonInput className=\"ion-text-right\" placeholder=\"Password\"></IonInput>\n                                </IonItem>\n\n                            </IonList>                     \n                            <IonButton routerLink=\"/page/SignIn\" routerDirection=\"root\">\n                                Login\n                                <IonRippleEffect></IonRippleEffect>\n                            </IonButton>\n                            <IonButton routerLink=\"/page/SignIn\" routerDirection=\"root\">\n                                SignUp\n                                <IonRippleEffect></IonRippleEffect>\n                            </IonButton>\n                        </IonCardContent>\n                    </IonCard>\n                </IonCol>\n                \n            </IonRow>\n        </IonGrid>\n    </IonContent>\n    );\n};\n\nexport default SignInContent;","import { IonButtons, IonContent, IonHeader, IonMenuButton, IonPage, IonTitle, IonToolbar } from '@ionic/react';\nimport React from 'react';\nimport { useParams } from 'react-router';\nimport HomeContent from '../components/HomeContent';\nimport FactoryContent from '../components/FactoryContent';\nimport AboutContent from '../components/AboutContent';\nimport AccountContent from '../components/AccountContent';\nimport './Page.css';\nimport PlayerContent from '../components/PlayerContent';\nimport SignInContent from '../components/SignInContent';\n\nconst Page: React.FC = () => {\n\n  const { name } = useParams<{ name: string; }>();\n\n  interface Title {\n    param: string;\n    title: string;\n  }\n\n  const titles: Title[] = [\n    {\n      param: 'home',\n      title: 'Home'\n    },\n    {\n      param: 'factory',\n      title: 'Create Simulation'\n    },\n    {\n      param: 'player',\n      title: 'Join Simulation'\n    },\n    {\n      param: 'loginsignup',\n      title: 'Login or Create Account'\n    },\n    {\n      param: 'account',\n      title: 'Your Account'\n    },\n    {\n      param: 'about',\n      title: 'About'\n    }\n  ];\n  \n  let title = titles.find(title => title.param === name)\n  return (\n    \n    <IonPage>\n      <IonHeader>\n        <IonToolbar>\n          <IonButtons slot=\"start\">\n            <IonMenuButton />\n          </IonButtons>\n          <IonTitle>{title?.title}</IonTitle>\n        </IonToolbar>\n      </IonHeader>\n\n      <IonContent fullscreen>\n      {name === 'home' &&\n        <HomeContent />\n      }\n      {name === 'factory' &&\n        <FactoryContent />\n      }\n      {name === 'about' &&\n        <AboutContent />\n      }\n      {name === 'account' &&\n        <AccountContent />\n      }\n      {name === 'player' &&\n        <PlayerContent />\n      }\n      {name === 'loginsignup' &&\n        <SignInContent />\n      }\n        \n      </IonContent>\n    </IonPage>\n  );\n};\n\nexport default Page;\n","import { IonApp, IonRouterOutlet, IonSplitPane } from '@ionic/react';\nimport { IonReactRouter } from '@ionic/react-router';\nimport { Redirect, Route } from 'react-router-dom';\nimport Menu from './components/Menu';\nimport Page from './pages/Page';\n\n/* Core CSS required for Ionic components to work properly */\nimport '@ionic/react/css/core.css';\n\n/* Basic CSS for apps built with Ionic */\nimport '@ionic/react/css/normalize.css';\nimport '@ionic/react/css/structure.css';\nimport '@ionic/react/css/typography.css';\n\n/* Optional CSS utils that can be commented out */\nimport '@ionic/react/css/padding.css';\nimport '@ionic/react/css/float-elements.css';\nimport '@ionic/react/css/text-alignment.css';\nimport '@ionic/react/css/text-transformation.css';\nimport '@ionic/react/css/flex-utils.css';\nimport '@ionic/react/css/display.css';\n\n/* Theme variables */\nimport './theme/variables.css';\n\nconst App: React.FC = () => {\n  return (\n    <IonApp>\n      <IonReactRouter>\n        <IonSplitPane contentId=\"main\">\n          <Menu />\n          <IonRouterOutlet animated={false} id=\"main\">\n            <Route path=\"/\" exact={true}>\n              <Redirect to=\"/page/home\" />\n            </Route>\n            <Route path=\"/page/:name\" exact={true}>\n              <Page />\n            </Route>\n          </IonRouterOutlet>\n        </IonSplitPane>\n      </IonReactRouter>\n    </IonApp>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\n\nimport { defineCustomElements } from '@ionic/pwa-elements/loader';\n\n// Call the element loader after the platform has been bootstrapped\ndefineCustomElements(window);\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.unregister();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","var map = {\n\t\"./ion-action-sheet.entry.js\": [\n\t\t148,\n\t\t7\n\t],\n\t\"./ion-alert.entry.js\": [\n\t\t149,\n\t\t8\n\t],\n\t\"./ion-app_8.entry.js\": [\n\t\t150,\n\t\t9\n\t],\n\t\"./ion-avatar_3.entry.js\": [\n\t\t151,\n\t\t19\n\t],\n\t\"./ion-back-button.entry.js\": [\n\t\t152,\n\t\t20\n\t],\n\t\"./ion-backdrop.entry.js\": [\n\t\t153,\n\t\t45\n\t],\n\t\"./ion-button_2.entry.js\": [\n\t\t154,\n\t\t21\n\t],\n\t\"./ion-card_5.entry.js\": [\n\t\t155,\n\t\t22\n\t],\n\t\"./ion-checkbox.entry.js\": [\n\t\t156,\n\t\t23\n\t],\n\t\"./ion-chip.entry.js\": [\n\t\t157,\n\t\t24\n\t],\n\t\"./ion-col_3.entry.js\": [\n\t\t158,\n\t\t46\n\t],\n\t\"./ion-datetime_3.entry.js\": [\n\t\t159,\n\t\t12\n\t],\n\t\"./ion-fab_3.entry.js\": [\n\t\t160,\n\t\t25\n\t],\n\t\"./ion-img.entry.js\": [\n\t\t161,\n\t\t47\n\t],\n\t\"./ion-infinite-scroll_2.entry.js\": [\n\t\t162,\n\t\t48\n\t],\n\t\"./ion-input.entry.js\": [\n\t\t163,\n\t\t26\n\t],\n\t\"./ion-item-option_3.entry.js\": [\n\t\t164,\n\t\t27\n\t],\n\t\"./ion-item_8.entry.js\": [\n\t\t165,\n\t\t28\n\t],\n\t\"./ion-loading.entry.js\": [\n\t\t166,\n\t\t29\n\t],\n\t\"./ion-menu_3.entry.js\": [\n\t\t167,\n\t\t30\n\t],\n\t\"./ion-modal.entry.js\": [\n\t\t168,\n\t\t10\n\t],\n\t\"./ion-nav_2.entry.js\": [\n\t\t169,\n\t\t16\n\t],\n\t\"./ion-popover.entry.js\": [\n\t\t170,\n\t\t11\n\t],\n\t\"./ion-progress-bar.entry.js\": [\n\t\t171,\n\t\t31\n\t],\n\t\"./ion-radio_2.entry.js\": [\n\t\t172,\n\t\t32\n\t],\n\t\"./ion-range.entry.js\": [\n\t\t173,\n\t\t33\n\t],\n\t\"./ion-refresher_2.entry.js\": [\n\t\t174,\n\t\t13\n\t],\n\t\"./ion-reorder_2.entry.js\": [\n\t\t175,\n\t\t18\n\t],\n\t\"./ion-ripple-effect.entry.js\": [\n\t\t176,\n\t\t49\n\t],\n\t\"./ion-route_4.entry.js\": [\n\t\t177,\n\t\t34\n\t],\n\t\"./ion-searchbar.entry.js\": [\n\t\t178,\n\t\t35\n\t],\n\t\"./ion-segment_2.entry.js\": [\n\t\t179,\n\t\t36\n\t],\n\t\"./ion-select_3.entry.js\": [\n\t\t180,\n\t\t37\n\t],\n\t\"./ion-slide_2.entry.js\": [\n\t\t181,\n\t\t50\n\t],\n\t\"./ion-spinner.entry.js\": [\n\t\t182,\n\t\t15\n\t],\n\t\"./ion-split-pane.entry.js\": [\n\t\t183,\n\t\t51\n\t],\n\t\"./ion-tab-bar_2.entry.js\": [\n\t\t184,\n\t\t38\n\t],\n\t\"./ion-tab_2.entry.js\": [\n\t\t185,\n\t\t17\n\t],\n\t\"./ion-text.entry.js\": [\n\t\t186,\n\t\t39\n\t],\n\t\"./ion-textarea.entry.js\": [\n\t\t187,\n\t\t40\n\t],\n\t\"./ion-toast.entry.js\": [\n\t\t188,\n\t\t41\n\t],\n\t\"./ion-toggle.entry.js\": [\n\t\t189,\n\t\t14\n\t],\n\t\"./ion-virtual-scroll.entry.js\": [\n\t\t190,\n\t\t52\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 82;\nmodule.exports = webpackAsyncContext;","var map = {\n\t\"./ion-icon.entry.js\": [\n\t\t191,\n\t\t67\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 84;\nmodule.exports = webpackAsyncContext;"],"sourceRoot":""}