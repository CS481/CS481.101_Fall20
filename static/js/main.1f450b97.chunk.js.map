{"version":3,"sources":["util/RouteBuilder.js","util/Stylesheet.js","components/Navigation.js","pages/Homepage.js","simulation-schema/js/Validator.js","simulation-schema/js/Schema.js","simulation-schema/js/User.js","simulation-schema/js/Effect.js","simulation-schema/js/FrameModification.js","components/TabPanel.js","simulation-schema/js/IdRequest.js","simulation-schema/js/IdResponse.js","simulation-schema/js/State.js","simulation-schema/js/UserResponse.js","simulation-schema/js/SimulationModification.js","util/Backend.js","util/FrameDropzone.js","pages/Factorypage.js","util/FormatString.js","pages/Playerpage.js","pages/Loginsignuppage.js","pages/Accountpage.js","pages/Aboutpage.js","App.js","serviceWorker.js","index.js"],"names":["pages","Map","RegisterRoutes","page","route","undefined","Error","aliases","newRoutes","newRoute","has","set","BuildRoutes","routes","forEach","Value","Key","push","exact","path","drawerWidth","Theme","responsiveFontSizes","createMuiTheme","palette","CreateStyles","makeStyles","root","flexGrow","display","title","color","primary","main","card","drawer","breakpoints","up","width","flexShrink","drawerPaper","appBar","marginLeft","menuButton","marginRight","spacing","blue","toolbar","mixins","content","padding","noDecoration","textDecoration","tabs","borderRight","divider","styles","Navigation","props","state","open","Styles","Fragment","this","renderDrawer","renderTopbar","className","aria-label","Hidden","smUp","implementation","SwipeableDrawer","variant","anchor","onClose","setState","onOpen","paper","ModalProps","keepMounted","renderDrawerContents","xsDown","Drawer","classes","Divider","List","ListItem","to","ListItemText","AppBar","position","Toolbar","IconButton","edge","onClick","Typography","noWrap","TopbarMessage","children","React","Component","Homepage","Grid","container","item","xs","sm","Card","CardContent","CardActions","Button","size","Ajv","coerceTypes","Schema","json","parsedObject","JSON","parse","Validate","schemaObject","Validator","validate","schema","name","stringify","errors","addSchema","User","UserSchema","RegisterSchema","call","Effect","EffectSchema","FrameModification","FrameModificationSchema","TabPanel","value","index","other","Box","p","IdRequest","IdRequestSchema","IdResponse","IdResponseSchema","State","FromJSON","StateSchema","UserResponse","UserResponseSchema","SimulationModification","SimulationModificationSchema","server_url","process","REACT_APP_SIMULATION_FACTORY_URL","request","callback","a","Post","InitializeFrame","frameModification","simulationModification","backendProcedure","requestValidator","responseValidator","fetch_url","fetch_body","method","headers","Headers","body","fetch","response","ok","text","status","statusText","FrameDropzone","onDrop","useCallback","importingFile","frame","effects","fileName","reader","FileReader","onabort","console","log","onerror","onload","event","binaryString","target","result","workbook","XLSX","type","SheetNames","sheetName","worksheet","Sheets","data","sheet_to_json","header","blankrows","operation","resource","commit","readAsBinaryString","useDropzone","getRootProps","getInputProps","Factorypage","useState","inputList","setInputList","onAddResponseClick","findActiveFrame","responses","concat","TextField","id","label","key","length","onChange","t","commitFrame","setError","e","selectedFrameKey","setSelectedFrameKey","anchorEl","setAnchorEl","error","frameList","setframeList","resources","response_timeout","simulation","resourceName","setResourceName","resourceValue","setResourceValue","tabValue","setOpen","openPlayerAdd","setOpenPlayerAdd","openResourceAdd","setOpenResourceAdd","simulationId","setSimulationId","username","password","user","setUser","handleMenuClick","currentTarget","handleMenuClose","handleSheetOpen","handleSheetClose","handlePlayerAddOpen","handlePlayerAddClose","handleResourceAddOpen","getDefaultFrame","default_action","rounds","firstRound","lastRound","addPrompt","r","addResponse","addEvent","i","ModifyFrame","frame_id","prompt","commitSimulation","ModifySimulation","simulation_id","addRounds","number","isFirst","parseInt","deleteTab","stopPropagation","tabId","tabIDIndex","filter","curValue","setFrameValue","setFrameList","renderFrameCard","multiline","renderFrames","Tabs","orientation","_","newValue","map","tab","Tab","toString","icon","renderCard","renderAddResource","Dialog","aria-labelledby","DialogTitle","DialogContent","DialogContentText","autoFocus","margin","fullWidth","DialogActions","InitializeSimulation","src","aria-controls","aria-haspopup","Boolean","MenuItem","aria-labeledby","dividers","style","justify","Tooltip","findValue","values","names","split","slice","SimulationPlayer","radioValue","logged_in","simState","user_waiting","renderPlayer","renderLogin","getUser","BeginSim","getSimulationInstance","setSimState","GetState","newState","renderSubmitButton","component","renderPrompt","renderResponses","FormControl","RadioGroup","renderResponseButtons","active_frame","FormControlLabel","control","Radio","checked","submitResponse","beginSim","template","matches","matchAll","match","replaceAll","FormatString","SubmitResponse","Playerpage","Loginsignuppage","Accountpage","Aboutpage","href","App","ThemeProvider","theme","window","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.1f450b97.chunk.js","sourcesContent":["import React from \"react\";\nimport {Route, Switch} from \"react-router-dom\";\n\nlet pages = new Map();\n\n/**\n   * Registers all of the routes that should lead to the given page\n   * @param  {React.Component} page The page to register routes for\n   * @param  {String} route The route to register for this page\n   * @param  {String} ...aliases All the other routes to register for this page\n*/\nfunction RegisterRoutes(page, route, ...aliases) {\n    if (page === undefined) {\n        throw new Error(\"page in RouteBuilder.RegisterRoute has not been supplied\");\n    }\n    if (route === undefined) {\n        throw new Error(\"route in RouteBuilder.RegisterRoute has not been supplied\");\n    }\n    let newRoutes = [route, ...aliases];\n    for (let newRoute of newRoutes) {\n        if (pages.has(newRoute)) {\n            throw new Error(\"RouteBuilder already contains route \" + newRoute);\n        }\n        pages.set(newRoute, page);\n    }\n}\n\n/**\n   * Builds all of the route tags required to link between pages\n*/\nfunction BuildRoutes() {\n    let routes = [];\n    pages.forEach((Value, Key) => routes.push(<Route exact path={Key}><Value/></Route>));\n    return <Switch>{routes}</Switch>;\n}\n\nexport {RegisterRoutes, BuildRoutes}\n","import {\n  createMuiTheme, \n  makeStyles, \n  responsiveFontSizes \n} from \"@material-ui/core/styles\";\n\nimport palette from \"./palette.json\"\n\nconst drawerWidth = 200;\n\nfunction CreateStyles() {\n\n  const styles = makeStyles((Theme) => ({\n    root: {\n      flexGrow: 1,\n      display: \"flex\"\n    },\n    title: {\n      color: Theme.palette.primary.main,\n    },\n    card: {// For future use since we use cards a lot\n      //flexGrow: 1,\n      //display: \"flex\",\n      //padding: Theme.spacing(2),\n      //textAlign: \"center\"\n    },\n    drawer: {\n      [Theme.breakpoints.up(\"sm\")]: {\n        width: drawerWidth,\n        flexShrink: 0\n      },\n    },\n    drawerPaper: {\n      width: drawerWidth,\n    },\n    appBar: {\n      [Theme.breakpoints.up(\"sm\")]: {\n        width: `calc(100% - ${drawerWidth}px)`,\n        marginLeft: drawerWidth\n      },\n    },\n    menuButton: {\n      marginRight: Theme.spacing(2),\n      [Theme.breakpoints.up(\"sm\")]: {\n        display: \"none\",\n      },\n    },\n    blue: {\n      color: \"blue\",\n    },\n    // necessary for content to be below app bar\n    toolbar: Theme.mixins.toolbar,\n    content: {\n      flexGrow: 1,\n      padding: Theme.spacing(3)\n    },\n    noDecoration: {\n      textDecoration: 'none'\n    },\n    tabs: {\n      borderRight: `1px solid ${Theme.palette.divider}`,\n    },\n  }))\n  return styles()\n};\n\nexport const Theme = responsiveFontSizes(createMuiTheme(palette));\nexport default CreateStyles\n","import React from \"react\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport { Link } from \"react-router-dom\";\n\nimport {\n    List,\n    ListItem, \n    ListItemText,\n    AppBar,\n    IconButton,\n    Toolbar,\n    Typography,\n    Divider,\n    Drawer,\n    Hidden,\n    SwipeableDrawer,\n    Button\n    } from \"@material-ui/core\";\n\nclass Navigation extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {open: false};\n        this.Styles = props.Styles;\n    }\n\n    render() {\n        return (\n            <React.Fragment>\n                {this.renderDrawer()}\n                {this.renderTopbar()}\n            </React.Fragment>\n        )\n    }\n\n    renderDrawer() {\n        return (\n            <nav className={this.Styles.drawer} aria-label=\"mailbox folders\">\n            {/* The implementation can be swapped with js to avoid SEO duplication of links. */}\n                <Hidden smUp implementation=\"css\">\n                    <SwipeableDrawer\n                        variant=\"temporary\"\n                        anchor=\"left\"\n                        open={this.state.open}\n                        onClose={() => this.setState({open: false})}\n                        onOpen={() => this.setState({open: true})}\n                        Styles={{\n                            paper: this.Styles.drawerPaper,\n                        }}\n                        ModalProps={{\n                            keepMounted: true, // Better open performance on mobile.\n                        }}\n                    >\n                        {this.renderDrawerContents()}\n                    </SwipeableDrawer>\n                </Hidden>\n                <Hidden xsDown implementation=\"css\">\n                    <Drawer\n                        classes={{\n                            paper: this.Styles.drawerPaper,\n                        }}\n                        variant=\"permanent\"\n                    >\n                    {this.renderDrawerContents()}\n                    </Drawer>\n                </Hidden>\n            </nav>\n        );\n    }\n\n    renderDrawerContents() {\n        return (\n            <React.Fragment>\n                <div className={this.Styles.toolbar} />\n                <Divider />\n                <List>\n                    <ListItem>\n                        <Link to = \"/home\" >Home</Link>\n                    </ListItem>\n                    <ListItem>\n                        <Link to = \"/factory\" >Create Simulation</Link>\n                    </ListItem>\n                    <ListItem>\n                        <Link to = \"/player\" >Join Simulation</Link>\n                    </ListItem>\n                    <ListItem>\n                        <Link to = \"/loginsignup\" >Login/SignUp</Link>\n                    </ListItem>\n                    <ListItem>\n                        <Link to = \"/account\" >Your Account</Link>\n                    </ListItem>\n                    <ListItem>\n                        <ListItemText primary=\"My Simulations\" />\n                    </ListItem>\n                    <ListItem>\n                        <Link to = \"/about\" >About</Link>\n                    </ListItem>\n                </List>\n            </React.Fragment>\n        )\n    }\n\n    renderTopbar() {\n        return (\n            <AppBar position=\"fixed\" className={this.Styles.appBar}>\n                <Toolbar>\n                    <IconButton\n                        color=\"inherit\"\n                        aria-label=\"open drawer\"\n                        edge=\"start\"\n                        onClick={() => this.setState({open: true})}\n                        className={this.Styles.menuButton}\n                    >\n                        <MenuIcon/>\n                    </IconButton>\n                    <Typography variant=\"h6\" noWrap>{this.props.TopbarMessage}</Typography>\n                    {this.props.children}\n                </Toolbar>\n            </AppBar>\n        );\n    }\n}\n\nexport default Navigation;\n","import React from \"react\";\n\nimport {\n  Grid,\n  Card,\n  CardActions,\n  CardContent,\n  Button,\n  List,\n  ListItem,\n  ListItemText,\n  Typography,\n} from \"@material-ui/core\";\n\nimport styles from \"../util/Stylesheet\";\nimport Navigation from \"../components/Navigation\";\nimport { Link } from \"react-router-dom\";\nimport { RegisterRoutes } from \"../util/RouteBuilder\";\n\nfunction Homepage(props) {\n  const Styles = styles();\n\n  return (\n    <div className={Styles.root}>\n      <Navigation TopbarMessage=\"York College of Pennsylvania Simulation Tool\" Styles={Styles} />\n      <main className={Styles.content}>\n        <div className={Styles.toolbar} />\n        <Grid container spacing={3}>\n          <Grid item xs={12} sm={6}>\n            <Card className={Styles.card}>\n              <CardContent>\n                <Typography className={Styles.title} variant=\"h2\">\n                  Simulation Factory\n                </Typography>\n                <List>\n                  <ListItem>\n                    <ListItemText primary=\"Create your simulation\" />\n                  </ListItem>\n                  <ListItem>\n                    <ListItemText primary=\"Run your simulation real-time or asyncronous\" />\n                  </ListItem>\n                  <ListItem>\n                    <ListItemText primary=\"Get analytics and feedback from participants\" />\n                  </ListItem>\n                  <ListItem >\n                    <CardActions>\n                    <Link to=\"/factory\" className={Styles.noDecoration}>\n                      <Button color=\"primary\" variant=\"contained\" size=\"medium\">\n                        Create Simulation\n                      </Button>\n                    </Link>\n                    </CardActions> \n                  </ListItem>\n                </List>\n              </CardContent>\n            </Card>\n          </Grid>\n          <Grid item xs={12} sm={6}>\n            <Card className={Styles.card}>\n              <CardContent>\n                <Typography className={Styles.title} variant=\"h2\">\n                  Join Simulation\n                </Typography>\n                <List>\n                  <ListItem>\n                    <ListItemText primary=\"Participate in Simulation\" />\n                  </ListItem>\n                  <ListItem>\n                    <ListItemText primary=\"Join with partner or run by yourself\" />\n                  </ListItem>\n                  <ListItem>\n                    <ListItemText primary=\"Contribute to research studies\" />\n                  </ListItem>\n                  <ListItem>\n                    <CardActions>\n                      <Link to=\"/player\" className={Styles.noDecoration}>\n                        <Button variant=\"contained\" color=\"primary\" size=\"medium\">\n                          Join Simulation\n                        </Button>\n                      </Link>\n                    </CardActions>\n                  </ListItem>\n                </List>\n              </CardContent>\n            </Card>\n          </Grid>\n        </Grid>\n      </main>\n    </div>\n  );\n}\n\nRegisterRoutes(Homepage, \"/\", \"/home\", \"/Home\", \"/Homepage\", \"/homepage\", \"/HomePage\", \"/homePage\");\nexport default Homepage;\n","import Ajv from 'ajv';\nexport default new Ajv({coerceTypes: true});","import Validator from \"./Validator\";\n\n// Base class for all schemas\nexport default class Schema {\n    static schema = {};\n    static FromJSON(json) {\n        let parsedObject = JSON.parse(json);\n        return this.Validate(parsedObject);\n    }\n    static Validate(schemaObject) {\n        if(Validator.validate(this.schema, schemaObject)) {\n            return schemaObject\n        } else {\n            throw new Error(`JavaScript object failed validation against schema ${this.name}.\n                             Error: ${JSON.stringify(Validator.errors)}.\n                             Object: ${JSON.stringify(schemaObject)}`);\n        }    \n    }\n    static RegisterSchema() {\n        Validator.addSchema(this.schema);\n    }\n}","import Schema from \"../js/Schema\";\nimport UserSchema from \"../schema/User.json\";\n\n// Schema that represents the user\nexport default class User extends Schema {\n    static schema = UserSchema;\n}\nSchema.RegisterSchema.call(User);","import Schema from \"./Schema\";\nimport EffectSchema from \"../schema/Effect.json\";\n\nexport default class Effect extends Schema {\n    static schema = EffectSchema;\n}\nSchema.RegisterSchema.call(Effect);","import Schema from \"./Schema\";\nimport FrameModificationSchema from \"../schema/FrameModification.json\";\n\n// Import for side-effects\nimport User from './User';\nimport Effect from './Effect';\n\nexport default class FrameModification extends Schema {\n    static schema = FrameModificationSchema;\n}\nSchema.RegisterSchema.call(FrameModification);","import React from \"react\";\nimport { Box } from \"@material-ui/core\";\n\nfunction TabPanel(props) {\n    const {value, index, children, other} = props;\n\n    return (\n        <div {...other}>\n            {value === index && <Box p={3}>{children}</Box>}\n        </div>\n    );\n}\n\nexport default TabPanel;","import Schema from \"./Schema\";\nimport IdRequestSchema from \"../schema/IdRequest.json\";\n\n// Imports for side-effects\nimport User from \"../js/User\"; \n\nexport default class IdRequest extends Schema {\n    static schema = IdRequestSchema;\n}\nSchema.RegisterSchema.call(IdRequest);","import Schema from \"./Schema\";\nimport IdResponseSchema from \"../schema/IdResponse.json\";\n\nexport default class IdResponse extends Schema {\n    static schema = IdResponseSchema;\n}\nSchema.RegisterSchema.call(IdResponse);","import Schema from \"../js/Schema\";\nimport StateSchema from \"../schema/State.json\";\n\n// Schema that represents the simulation's state\nexport default class State extends Schema {\n    static schema = StateSchema;\n\n    // TODO: If user_waiting == false, add the other properties to the required array, and re-validate\n    static FromJSON(json) {\n        return Schema.FromJSON.call(this, json);\n    }\n}\nSchema.RegisterSchema.call(State);","import Schema from \"../js/Schema\";\nimport UserResponseSchema from \"../schema/UserResponse.json\";\n\n// Imports for side-effects\nimport User from \"../js/User\"; \n\nexport default class UserResponse extends Schema {\n    static schema = UserResponseSchema;\n}\nSchema.RegisterSchema.call(UserResponse);","import Schema from \"./Schema\";\nimport SimulationModificationSchema from \"../schema/SimulationModification.json\";\n\n// Imports for side-effects\nimport User from \"../js/User\"; \n\nexport default class SimulationModification extends Schema {\n    static schema = SimulationModificationSchema;\n}\nSchema.RegisterSchema.call(SimulationModification);","import IdRequest from \"../simulation-schema/js/IdRequest\";\nimport IdResponse from \"../simulation-schema/js/IdResponse\";\nimport State from \"../simulation-schema/js/State\";\nimport User from \"../simulation-schema/js/User\";\nimport UserResponse from \"../simulation-schema/js/UserResponse\";\nimport FrameModification from \"../simulation-schema/js/FrameModification\";\nimport Effect from \"../simulation-schema/js/Effect\";\nimport SimulationModification from \"../simulation-schema/js/SimulationModification\";\n\nlet server_url = process.env.REACT_APP_SIMULATION_FACTORY_URL;\n\n// Executes the BeginSim procedure on the backend\n// Args:\n//      request (object): The request to POST to the backend\n//      callback (object): The callback to execute once the backend responds.\n//                         This callback accepts no arguments.\nexport async function BeginSim(request, callback) {\n    Post(request, callback, 'BeginSim', IdRequest);\n}\n\n// Executes the GetSimState procedure on the backend\n// Args:\n//      request (object): The request to POST to the backend\n//      callback (object): The callback to execute once the backend responds.\n//                         This callback accepts one State argument.\nexport async function GetState(request, callback) {\n    Post(request, callback, 'GetSimState', IdRequest, State);\n}\n\n// Executes the SubmitResponse procedure on the backend\n// Args:\n//      request (object): The request to POST to the backend\n//      callback (object): The callback to execute once the backend responds.\n//                         This callback accepts no arguments.\nexport async function SubmitResponse(request, callback) {\n    Post(request, callback, 'SubmitResponse', UserResponse);\n}\n\n// Executes the CheckCredentials procedure on the backend\n// Args:\n//      request (object): The request to POST to the backend\n//      callback (object): The callback to execute once the backend responds.\n//                         This callback accepts no arguments.\nexport async function CheckCredentials(request, callback) {\n    Post(request, callback, 'CheckCredentials', User);\n}\n\n// Executes the SimulationInitialization procedure on the backend\n// Args:\n//      request (object): The request to POST to the backend\n//      callback (object): The callback to execute once the backend responds.\n//                         This callback accepts one IdResponse argument.\nexport async function InitializeSimulation(request, callback) {\n    Post(request, callback, 'SimulationInitialization', User, IdResponse);\n}\n\n// Executes the FrameInitialization procedure on the backend\n// Args:\n//      request (object): The request to POST to the backend\n//      callback (object): The callback to execute once the backend responds.\n//                         This callback accepts one IdResponse argument.\nexport async function InitializeFrame(request, callback) {\n    Post(request, callback, 'FrameInitialization', IdRequest, IdResponse);\n}\n\n/**\n *  Modifies a frame\n * @param {object} frameModification The request to POST to the backend\n * @param {object} callback The callback to execute once the backend responds.\n */\nexport async function ModifyFrame(frameModification, callback) {\n    Post(frameModification, callback, 'FrameModification', FrameModification);\n}\n\n/**\n * Modifies a simulation\n * @param {object} simulationModifcation The request to POST to the backend\n * @param {object} callback The callback to execute once the backend responds.\n */\nexport async function ModifySimulation(simulationModification, callback) {\n    Post(simulationModification, callback, 'SimulationModification', SimulationModification);\n}\n\n// Private method to issue a POST request to the backend\n// Args:\n//      request (object): The request object to post\n//      callback (function): The function to call once the backend responds. \n//                           If responseValidator is null, the callback is called with no argument.\n//                           Otherwise, the callback is called with the backend's reponse as an argument\n//      backendProcedure (string): The procedure to request the backend to perform\n//      requestValidator (class): The validator class to use on the request object\n//      responseValidator (class): The validator class to use on the backend's response.\n//                                 If null, the callback is called with no argument. Defaults to null.\nasync function Post(request, callback, backendProcedure, requestValidator, responseValidator=null) {\n    requestValidator.Validate(request);\n    let fetch_url = `${server_url}/${backendProcedure}.php`;\n    let fetch_body = {\n        method: \"POST\",\n        headers: new Headers(),\n        body: JSON.stringify(request)\n    };\n    let response = await fetch(fetch_url, fetch_body);\n    if (response.ok) {\n        if (responseValidator == null) {\n            callback();\n        } else {\n            callback(responseValidator.FromJSON(await response.text()));\n        }\n    } else {\n        throw new Error(`Error ${response.status}: ${response.statusText}`)\n    }\n}\n","import React, { useCallback }from 'react';\nimport { useDropzone } from 'react-dropzone';\nimport * as XLSX from 'xlsx';\n\nexport default function FrameDropzone(props) {\n    const onDrop = useCallback((importingFile) => {\n        props.frame.effects = [];\n        // TODO: This is only going to work with one file\n        importingFile.forEach((fileName) => {\n            const reader = new FileReader();\n            reader.onabort = () => console.log('file reading was aborted');\n            reader.onerror = () => console.log('file reading has failed');\n            reader.onload = (event) => {\n                // The event variable above is when you select the file\n                // parse file\n                const binaryString = event.target.result;\n                const workbook = XLSX.read(binaryString, {type:'binary'});\n                // get the ith worksheet... in this case the first one. \n                // TODO: Change later for multiple sheets\n                workbook.SheetNames.forEach((sheetName) => {\n                    const worksheet = workbook.Sheets[sheetName];\n                    \n                    const data = XLSX.utils.sheet_to_json(worksheet, { header:1, blankrows:false });\n\n                    props.frame.effects.push({\n                        effects: data,\n                        operation: \"*\", // Unimplemented\n                        resource: sheetName\n                    });\n                    // convert to readable data\n                    // give the data to the console log to read it\n                    console.log(\"File Data for workesheet \" + sheetName + \": \" + JSON.stringify(data));\n                });\n                props.commit(props.frame);\n            }\n            reader.readAsBinaryString(fileName);\n        });\n    }, [])\n    const {getRootProps, getInputProps} = useDropzone({onDrop})\n\n    return (\n    <div {...getRootProps()}>\n        <input {...getInputProps()} />\n        <p>You may drag and drop a file here, or instead click to import the file.</p>\n    </div>\n    )\n}","import React from \"react\";\nimport FrameModification from \"../simulation-schema/js/FrameModification\";\n\nimport { \n  Grid,\n  Card,\n  CardActions,\n  Button,\n  CardContent,\n  Menu, \n  MenuItem,\n  Tabs,\n  Tab,\n  Table,\n  TextField,\n  Tooltip,\n  Typography,\n  Dialog,\n  DialogContent,\n  DialogTitle,\n  DialogActions,\n  DialogContentText,\n} from \"@material-ui/core\";\n\nimport CreateStyles from \"../util/Stylesheet\";\nimport Navigation from \"../components/Navigation\";\nimport TabPanel from \"../components/TabPanel\";\nimport { RegisterRoutes } from \"../util/RouteBuilder\";\nimport {\n  InitializeSimulation,\n  InitializeFrame,\n  ModifyFrame,\n  ModifySimulation\n} from \"../util/Backend\";\nimport Close from \"@material-ui/icons/Close\";\nimport FrameDropzone from \"../util/FrameDropzone\";\n\nfunction Factorypage(props) {\n\n  const [inputList, setInputList] = React.useState([]);\n  function onAddResponseClick (event) {\n    let frame = findActiveFrame();\n    frame.responses.push(\"\");\n    setInputList(inputList.concat(<TextField id=\"response\" label=\"Response\" variant=\"filled\" key={inputList.length}\n                                   onChange={(t) => {\n                                      frame.responses[inputList.length] = t.target.value;\n                                      try {\n                                        commitFrame(frame);\n                                        setError(\"\");\n                                      } catch (e) {\n                                        console.log(e);\n                                        setError(\"One of the responses is invalid. Do you have duplicates?\");\n                                      }\n                                   }} />));\n  };\n\n  const Styles = CreateStyles();\n  const [selectedFrameKey, setSelectedFrameKey] = React.useState(0);\n  const [anchorEl, setAnchorEl] = React.useState(null);\n\n  const [error, setError] = React.useState(\"\");\n\n  const [frameList, setframeList] = React.useState([]);\n  const [simulation, setSimulation] = React.useState({\n    resources: {},\n    response_timeout: 500000\n  });\n\n  const [resourceName, setResourceName] = React.useState(\"\");\n  const [resourceValue, setResourceValue] = React.useState(\"\");\n\n  const [tabValue, setTabValue] = React.useState(0);\n  const [open, setOpen] = React.useState(false);\n  const [openPlayerAdd, setOpenPlayerAdd] = React.useState(false);\n  /**\n   * Handles resource dialog box\n   */\n  const [openResourceAdd, setOpenResourceAdd] = React.useState(false);\n\n  // Information for backend\n  const [simulationId, setSimulationId] = React.useState('');\n  const [user, setUser] = React.useState({username: '', password: ''});\n  \n  function handleMenuClick(event) {\n    setAnchorEl(event.currentTarget);\n  };\n  function handleMenuClose() {\n    setAnchorEl(null);\n  };\n  function handleSheetOpen(event) {\n    setOpen(true);\n  };\n  function handleSheetClose(event) {\n    setOpen(false);\n  };\n  function handlePlayerAddOpen(event) {\n    setOpenPlayerAdd(true);\n    setAnchorEl(null);\n  };\n  function handlePlayerAddClose(event) {\n    setOpenPlayerAdd(false);\n  };\n  function handleResourceAddOpen(event) {\n    setOpenResourceAdd(true);\n    setAnchorEl(null);\n  };\n\n  // Returns a new frame with all of the values set to the default, and the given id and type\n  function getDefaultFrame(id, type) {\n    return { \n      key: id,\n      id: id,\n      type: type,\n      default_action: \"\",\n      responses: [],\n      rounds: [],\n      effects: [],\n      firstRound: \"\",\n      lastRound: \"\"\n    }\n  }\n\n  function addPrompt() {\n    InitializeFrame({user: user, id: simulationId}, (r) => {\n      setframeList([...frameList, getDefaultFrame(r.id, 0)]);    \n    })\n  };\n\n  function addResponse() {\n    InitializeFrame({user: user, id: simulationId}, (r) => {\n      setframeList([...frameList, getDefaultFrame(r.id, 1)]);\n    })\n  };\n\n  function addEvent() {\n    InitializeFrame({user: user, id: simulationId}, (r) => {\n      setframeList([...frameList, getDefaultFrame(r.id, 2)]);    \n    })\n  };\n\n  // Returns the frame that the user currently has selected\n  function findActiveFrame() {\n    for(let i = 0; i < frameList.length && frameList.length > 0; i++) {\n      if (frameList[i].key == selectedFrameKey) {\n        return frameList[i];\n      }\n    }\n  }\n\n  // Stores the given frame into the backend\n  function commitFrame(frame) {\n    // Validate by FrameModification, as a poor excuse for proper error checking\n    ModifyFrame(FrameModification.Validate({\n      user: user,\n      frame_id: frame.id,\n      default_action: frame.default_action,\n      responses: frame.responses,\n      rounds: frame.rounds,\n      effects: frame.effects,\n      prompt: frame.prompt\n    }), () => {});\n  }\n\n  function commitSimulation() {\n    ModifySimulation({user: user,\n                      simulation_id: simulationId,\n                      resources: simulation.resources,\n                      response_timeout: simulation.response_timeout\n    }, () => {});\n  }\n\n  function addResource() {\n    if (resourceName != \"\" && resourceValue != \"\") {\n      simulation.resources[resourceName] = resourceValue;\n    }\n    commitSimulation();\n  }\n\n  // Adds either the first or last round numbers to the frame\n  function addRounds(number, isFirst) {\n    let frame = findActiveFrame();\n    if (isFirst) {\n      frame.firstRound = number;\n    } else {\n      frame.lastRound = number;\n    }\n\n    frame.rounds = [];\n    if (frame.firstRound != \"\" && frame.lastRound != \"\") {\n      let firstRound = parseInt(frame.firstRound);\n      let lastRound = parseInt(frame.lastRound);\n      while (firstRound <= lastRound) {\n        frame.rounds.push(firstRound);\n        firstRound++;\n      }\n    }\n    commitFrame(frame);\n  }\n\n  // TODO: THIS IS REALLY BROKEN\n  function deleteTab(e) {\n    e.stopPropagation();\n\n    if (frameList.length === 1) {\n      return;\n    }\n    let tabId = parseInt(e.target.id);\n    let tabIDIndex = 0;\n\n    let tabs = frameList.filter((value, index) => {\n      if (value.id === tabId) {\n        tabIDIndex = index;\n      }\n      return value.id !== tabId;\n    });\n\n    let curValue = parseInt(tabValue);\n    if (curValue === tabId) {\n      if (tabIDIndex === 0) {\n        curValue = frameList[tabIDIndex + 1].id;\n      } else {\n        curValue = frameList[tabIDIndex - 1].id;\n      }\n    }\n    setFrameValue(curValue);\n    setFrameList(tabs);\n  };\n\n  function renderFrameCard() {\n    return (\n      <Card className={Styles.root}>\n        <CardContent>\n          <Typography>\n            Enter User Prompt:\n          </Typography>\n        </CardContent>\n        <CardActions>\n          <form>\n            <TextField id=\"prompt\"\n              label=\"Prompt\"\n              variant=\"filled\"\n              multiline\n              onChange={(t) => {\n                let frame = findActiveFrame();\n                frame.prompt = t.target.value;\n                commitFrame(frame);\n              }}/>\n          </form>\n          <Grid>\n                <div>\n                  <Button onClick={onAddResponseClick}>Add Response</Button>\n                </div>\n                <div>\n                {inputList}\n                </div>\n          </Grid>\n          <Grid>\n            <TextField\n              id=\"firstRound\"\n              label=\"First Round\"\n              type=\"number\"\n              variant=\"filled\"\n              onChange={(t) => addRounds(t.target.value, true)}\n            />\n            <TextField\n              id=\"lastRound\"\n              label=\"Last Round\"\n              type=\"number\"\n              variant=\"filled\"\n              onChange={(t) => addRounds(t.target.value, false)}\n            />\n          </Grid>\n          <Grid>\n            <Typography color=\"error\">\n              {error}\n            </Typography>\n          </Grid>\n        </CardActions>\n      </Card>\n    )\n  }\n\n  //TODO: Different types of frame cards\n  function renderCard(tab) {\n    switch (tab.type) {\n      default:\n        return renderFrameCard();\n      case 1:\n        return renderFrameCard();\n      case 2:\n        return renderFrameCard();\n    }\n  };\n\n  // Temporary code until login process is completed\n  function renderLogin() {\n    return (\n      <main className={Styles.content}>\n        <div className={Styles.toolbar} /> {/* Why is this necessary */}\n        <Card className={Styles.root}>\n          <CardContent>\n            <TextField id=\"username_field\" label=\"Username\" variant=\"filled\"\n              onChange={(t) => setUser({username: t.target.value, password: user.password})}/>\n            <TextField id=\"password_field\" label=\"Password\" variant=\"filled\"\n              onChange={(t) => setUser({password: t.target.value, username: user.username})}/>\n          </CardContent>\n        </Card>\n        <Card>\n          <CardContent>\n            {renderSubmitButton()}\n          </CardContent>\n        </Card>\n      </main>\n    )\n  };\n\n  function renderSubmitButton() {\n    return (\n      <Button variant=\"contained\" color=\"primary\" size=\"medium\" \n        onClick={() => InitializeSimulation(user, (r) => setSimulationId(r.id))}>\n        Begin\n      </Button>\n    )\n  };\n\n  function renderFrames() {\n    return (\n      <div className={Styles.root}>\n        <Tabs\n          orientation=\"vertical\"\n          variant=\"scrollable\"\n          value={selectedFrameKey}\n          onChange={(_, newValue) => setSelectedFrameKey(newValue)}\n          className={Styles.tabs}\n        >\n          {frameList.map((tab) => (\n            <Tab\n              key={tab.key.toString()}\n              value={tab.id}\n              label={\"Node \" + tab.id}\n              icon={<Close id={tab.id} onClick={deleteTab} />}\n              className=\"mytab\"\n            />\n          ))}\n        </Tabs>\n        {frameList.map((tab) => (\n          <TabPanel value={selectedFrameKey} index={tab.key}>\n            {renderCard(tab)}\n          </TabPanel>\n        ))}\n      </div>\n    )\n  }\n\n  function renderAddResource() {\n    return (\n      <Dialog open={openResourceAdd} onClose={() => setOpenResourceAdd(false)} aria-labelledby=\"form-dialog-title\">\n        <DialogTitle id=\"form-dialog-title\">Add a Resource</DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            Enter the name of the resource\n          </DialogContentText>\n          <TextField\n            autoFocus\n            margin=\"dense\"\n            id=\"name\"\n            label=\"Name of resource to add\"\n            fullWidth\n            onChange={(t) => {setResourceName(t.target.value)}}\n          />\n          <DialogContentText>\n            Enter the starting amount of the resource:\n          </DialogContentText>\n          <TextField\n            autoFocus\n            margin=\"dense\"\n            id=\"amount\"\n            label=\"Starting amount\"\n            type=\"number\"\n            fullWidth\n            onChange={(t) => {setResourceValue(t.target.value)}}\n          />\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={() => setOpenResourceAdd(false)} color=\"primary\">\n            Cancel\n          </Button>\n          <Button color=\"primary\"\n            onClick={() => {\n              setOpenResourceAdd(false);\n              addResource();\n          }}>\n            Add Resource\n          </Button>\n        </DialogActions>\n    </Dialog>\n    )\n  }\n\n  function renderFactoryPage() {\n    return (\n      <div className={Styles.root}>\n        <script src=\"xlsx.full.min.js\"></script>\n        <Navigation TopbarMessage=\"Simulation Builder\" Styles={Styles}>\n          <Button\n            className=\"SimMenuButton\"\n            aria-controls=\"sim-menu\"\n            aria-haspopup=\"true\"\n            onClick={handleMenuClick}\n          >\n            Simulation Settings\n          </Button>\n          <Menu\n            id=\"simple-menu\"\n            anchorEl={anchorEl}\n            keepMounted\n            open={Boolean(anchorEl)}\n            onClose={handleMenuClose}\n          >\n            <MenuItem onClick={handleSheetOpen}>Import Lookup Table</MenuItem>\n            <Dialog\n              onClose={handleSheetClose}\n              aria-labeledby=\"lookup-table-dialog\"\n              open={open}\n            >\n              <DialogTitle id=\"lookup-table-title\" onClose={handleSheetClose}>\n                Lookup Table Entry\n              </DialogTitle>\n              <DialogContent dividers>\n                <div style={{ width: \"max-content\" }}>\n                  <FrameDropzone frame={findActiveFrame()} commit={commitFrame}/>\n                </div>\n              </DialogContent>\n            </Dialog>\n            <MenuItem onClick={handlePlayerAddOpen}>Add Player</MenuItem>\n            <Dialog open={openPlayerAdd} onClose={handlePlayerAddClose} aria-labelledby=\"form-dialog-title\">\n              <DialogTitle id=\"form-dialog-title\">Add a Player</DialogTitle>\n                <DialogContent>\n                  <DialogContentText>\n                    Enter the name of the player.\n                  </DialogContentText>\n                  <TextField\n                    autoFocus\n                    margin=\"dense\"\n                    id=\"name\"\n                    label=\"Name of Player to add\"\n                    fullWidth\n                  />\n                </DialogContent>\n              <DialogActions>\n                <Button onClick={handlePlayerAddClose} color=\"primary\">\n                  Cancel\n                </Button>\n                <Button onClick={handlePlayerAddClose} color=\"primary\">\n                  Add Player\n                </Button>\n              </DialogActions>\n            </Dialog>\n            <MenuItem onClick={handleResourceAddOpen}>Add Resource</MenuItem>\n            {renderAddResource()}\n          </Menu>\n        </Navigation>\n        <main className={Styles.content}>\n          <div className={Styles.toolbar} /> {/* Why is this necessary */}\n          <Grid container spacing={3} justify=\"center\">\n            <Grid container spacing={1} justify=\"center\">\n              <Grid item xs={12} sm={1}>\n                <Button\n                  variant=\"contained\"\n                  color=\"primary\"\n                  size=\"medium\"\n                  onClick={addEvent}\n                >\n                  Add event\n                </Button>\n              </Grid>\n              <Grid item xs={12} sm={1}>\n                <Button\n                  variant=\"contained\"\n                  color=\"primary\"\n                  size=\"medium\"\n                  onClick={addPrompt}\n                >\n                  Add prompt\n                </Button>\n              </Grid>\n              <Grid item xs={12} sm={1}>\n                <Button\n                  variant=\"contained\"\n                  color=\"primary\"\n                  size=\"medium\"\n                  onClick={addResponse}\n                >\n                  Add response\n                </Button>\n              </Grid>\n              <Grid item xs={12} sm={1}>\n                <Tooltip title=\"Participants need this id to run your simulation. Save it somewhere you won't lose it!\">\n                  <div>Your simulation id is {simulationId}</div>\n                </Tooltip>\n              </Grid>\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              {renderFrames()}\n            </Grid>\n          </Grid>\n        </main>\n      </div>\n    );\n  };\n\n  if (simulationId == '') {\n    return renderLogin();\n  } else {\n    return renderFactoryPage();\n  }\n}\n\nRegisterRoutes(\n  Factorypage,\n  \"/factory\",\n  \"/Factory\",\n  \"/factoryPage\",\n  \"/FactoryPage\"\n);\n\nexport default Factorypage;\n","// We need our own runtime templating engine.\n// I'm going to use the same format as a template literal.\n// The values are passed as an object, and nested objects can be retrieved with ${name.subname}f syntax\n// Does not support arrays right now. We may need to change that later\nexport default function FormatString(template, values) {\n    let matches = [...template.matchAll(/\\$\\{(.*?)\\}/g)];\n    let result = template;\n    for (let i in matches) {\n        let match = matches[i];\n        let value = findValue(match[1], values);\n        result = result.replaceAll(match[0], value)\n    }\n    return result\n}\n\nfunction findValue(name, values) {\n    let names = name.split(\".\");\n    while (names.length > 1) {\n        values = values[names[0]];\n        names = names.slice(1);\n    }\n    return values[names[0]];\n}\n","import React from 'react';\n\nimport {\n    FormControl,\n    FormControlLabel,\n    Radio,\n    RadioGroup,\n    Card,\n    CardContent,\n    Typography,\n    Button,\n    TextField,\n} from \"@material-ui/core\";\n\nimport Navigation from \"../components/Navigation\";\nimport { RegisterRoutes } from \"../util/RouteBuilder\";\nimport styles from \"../util/Stylesheet\";\n\nimport {\n    BeginSim,\n    GetState,\n    SubmitResponse\n} from \"../util/Backend\";\n\nimport FormatString from \"../util/FormatString\";\n\nclass SimulationPlayer extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            radioValue: false,\n            logged_in: false,\n            simState: {user_waiting: true}\n        };\n    }\n    render() {\n        if (this.state.logged_in) {\n            return this.renderPlayer();\n        } else {\n            return this.renderLogin();\n        }\n    }\n\n    getUser() {\n        return {username: this.state.username, password: this.state.password};\n    }\n\n    getSimulationInstance() {\n        return {user: this.getUser(), id: this.state.simulation_id};\n    }\n\n    beginSim() {\n        BeginSim(this.getSimulationInstance(), () => {\n            this.setState({logged_in: true});\n            this.setSimState();\n        });\n    }\n\n    setSimState() {\n        GetState(this.getSimulationInstance(), (newState) => this.setState({simState: newState}));\n    }\n\n    // Temporary code for 50% completion\n    renderLogin() {\n        let Styles = this.props.Styles;\n        return (\n            <main className={Styles.content}>\n                <div className={Styles.toolbar} /> {/* Why is this necessary */}\n                <Card className={Styles.root}>\n                    <CardContent>\n                        <TextField id=\"username_field\" label=\"Username\" variant=\"filled\" onChange={(t) => this.setState({username: t.target.value})}/>\n                        <TextField id=\"password_field\" label=\"Password\" variant=\"filled\" onChange={(t) => this.setState({password: t.target.value})}/>\n                        <TextField id=\"simulation_id_field\" label=\"Simulation Id\" variant=\"filled\" onChange={(t) => this.setState({simulation_id: t.target.value})}/>\n                    </CardContent>\n                </Card>\n                <Card>\n                    <CardContent>\n                        {this.renderSubmitButton()}\n                    </CardContent>\n                </Card>\n            </main>\n        )\n    }\n\n    renderPlayer() {\n        let Styles = this.props.Styles;\n        return (\n            <main className={Styles.content}>\n                <div className={Styles.toolbar} /> {/* Why is this necessary */}\n                <Card className={Styles.root}>\n                    <CardContent>\n                        <Typography variant=\"h3\" component=\"p\">\n                            {this.renderPrompt()}\n                        </Typography>\n                    </CardContent>\n                </Card>\n                <Card className={Styles.root}>\n                    <CardContent>\n                        {this.renderResponses(Styles)}\n                    </CardContent>\n                </Card>\n                <Card>\n                    <CardContent>\n                        {this.renderSubmitButton()}\n                    </CardContent>\n                </Card>\n            </main>\n        )\n    }\n\n    renderResponses() {\n        return (\n            <FormControl component=\"fieldset\">\n                <RadioGroup aria-label=\"options\" name=\"options1\" value={this.state.radioValue}\n                    onChange={(event) => {this.setState({radioValue: event.target.value})}}>\n                    {this.renderResponseButtons()}\n                </RadioGroup>\n            </FormControl>\n        )\n    }\n\n    renderResponseButtons() {\n        if (!this.state.simState.user_waiting) {\n            let responses = this.state.simState.active_frame.responses;\n            return responses.map((response) => {\n                return <FormControlLabel value={response} control={<Radio/>} label={response} checked={this.state.radioValue===response} />\n            });\n        }\n    }\n\n    renderSubmitButton() {\n        if (!this.state.logged_in)\n        {\n            return (\n                <Button variant=\"contained\" color=\"primary\" size=\"medium\" \n                    onClick={() => this.beginSim()}> {/* 'this' is undefined if you try to write the callback the obvious way */}\n                    Begin\n                </Button>\n            )\n        } else if (!this.state.simState.user_waiting) {\n            return (\n                <Button variant=\"contained\" color=\"primary\" size=\"medium\" \n                    onClick={() => this.submitResponse()}> {/* 'this' is undefined if you try to write the callback the obvious way */}\n                    Submit\n                </Button>\n            )\n        } else {\n            return (\n                <Button variant=\"contained\" color=\"primary\" size=\"medium\" \n                    onClick={() => this.setSimState()}> {/* 'this' is undefined if you try to write the callback the obvious way */}\n                    Refresh\n                </Button>\n            )\n        }\n    }\n\n    renderPrompt() {\n        if (this.state.simState.user_waiting) {\n            return \"Waiting...\"\n        } else {\n            return FormatString(this.state.simState.active_frame.prompt, this.state.simState)\n        }\n    }\n\n    submitResponse() {\n        // Do nothing if the user has not chosen a response\n        if (!this.state.radioValue) {\n            return\n        }\n        SubmitResponse({user: this.getUser(), response: this.state.radioValue, simulation_id: this.state.simulation_id},\n                       () => this.setState({radioValue: false, simState: {user_waiting: true}})\n                      );\n    }\n}\n\nfunction Playerpage() {\n    const Styles = styles();\n    return (\n        <div className={Styles.root}>\n            <Navigation TopbarMessage=\"Simulation Player\" Styles={Styles}/>\n            <SimulationPlayer Styles={Styles}/> {/* Not sure why, but we can't rebuild our classes inside this Class component */}\n        </div>\n    );\n}\n\nRegisterRoutes(Playerpage, \"/player\", \"/playerpage\", \"/Player\", \"/Playerpage\", \"/playerPage\");\nexport default Playerpage;","import React from 'react';\n\nimport {\n    Grid,\n    Card,\n    CardContent,\n    List,\n    ListItem,\n    Typography,\n    TextField,\n    Button\n} from \"@material-ui/core\";\n\nimport Navigation from \"../components/Navigation\";\nimport { RegisterRoutes } from \"../util/RouteBuilder\";\nimport CreateStyles from \"../util/Stylesheet\";\n\nfunction Loginsignuppage() {\n\n    const Styles = CreateStyles();\n\n    return (\n        <div className={Styles.root}>\n            <Navigation TopbarMessage=\"Login/Signup!\" Styles={Styles}/>\n            <main className={Styles.content}>\n                <div className={Styles.toolbar} />\n                <Grid container spacing={3} >\n                    <Grid item xs={12} sm={6} >\n                        <Card className={Styles.card}>\n                            <CardContent>\n                                <Typography className={Styles.title} variant=\"h2\">\n                                    Login or Signup\n                                </Typography>\n                                <List>\n                                    <ListItem>\n                                            <TextField id=\"outlined-login-user-id\" label=\"User ID\" variant=\"outlined\" />\n                                    </ListItem>\n                                    <ListItem>\n                                            <TextField id=\"outlined-login-user-password\" label=\"Password\" variant=\"outlined\" />\n                                    </ListItem>\n                                    <ListItem>\n                                        <Button variant=\"contained\" color=\"primary\" size=\"medium\">\n                                            Submit\n                                        </Button>\n                                    </ListItem>\n                                    <ListItem>\n                                        <Button variant=\"contained\" color=\"primary\" size=\"medium\">\n                                            Signup\n                                        </Button>\n                                    </ListItem>\n                                </List>\n                            </CardContent>\n                        </Card>\n                    </Grid>\n                </Grid>\n            </main>\n        </div>\n    );\n}\n\nRegisterRoutes(Loginsignuppage, \"/loginsignup\", \"/Loginsignuppage\", \"LoginSignUpPage\", \"/loginsignupPage\");\nexport default Loginsignuppage;\n","import React from 'react';\nimport CreateStyles from \"../util/Stylesheet\";\n\nimport { \n    List, \n    ListItem, \n    ListItemText, \n    Typography,\n    TextField,\n    Button,\n    CardContent,\n    Grid,\n    Card,\n} from \"@material-ui/core\";\n\nimport Navigation from \"../components/Navigation\";\n\nimport { RegisterRoutes } from \"../util/RouteBuilder\";\n\n\nfunction Accountpage() {\n\n    const Styles = CreateStyles();\n\n    return (\n        <div className={Styles.root}>\n            <Navigation TopbarMessage=\"My Account\" Styles={Styles}/>\n            <main className={Styles.content}>\n                <div className={Styles.toolbar}/>\n                <Grid container spacing={3}>\n                    <Grid item xs={12} sm={6}>\n                        <Card className={Styles.card}>\n                            <CardContent>\n                                <Typography className={Styles.title} variant=\"h2\">\n                                    Account Info\n                                </Typography>\n                                <List>\n                                    <ListItem>\n                                        <ListItemText primary=\"User ID: \" />\n                                        <ListItemText primary=\" 123456789 \" />\n                                    </ListItem>\n                                    <ListItem>\n                                        <ListItemText primary=\"Email: \" />\n                                        <ListItemText primary=\" thisperson@companydomain.com \" />\n                                    </ListItem>\n                                    <ListItem>\n                                        <ListItemText primary=\"Change Email: \" />\n                                        <TextField id=\"outlined-account-new-email\" label=\"New Email\" variant=\"outlined\" />\n                                    </ListItem>\n                                    <ListItem>\n                                        <ListItemText primary=\"Password: \" />\n                                        <TextField id=\"outlined-account-password\" label=\"Password\" variant=\"outlined\" />\n                                    </ListItem>\n                                    <ListItem>\n                                        <Button variant=\"contained\" color=\"primary\" size=\"medium\">\n                                            Submit\n                                        </Button>\n                                    </ListItem>\n                                </List>\n                            </CardContent>\n                        </Card>\n                    </Grid>\n                    <Grid item xs={12} sm={6} >\n                        <Card className={Styles.card}>\n                            <CardContent>\n                                <Typography className={Styles.title} variant=\"h2\">\n                                    Change Password\n                                </Typography>\n                                <List>\n                                    <ListItem>\n                                        <ListItemText>To change the password you must</ListItemText>\n                                    </ListItem>\n                                    <ListItem>\n                                        <ListItemText>type in the original password.</ListItemText>\n                                    </ListItem>\n                                    <ListItem>\n                                        <ListItemText primary=\"Original: \" />\n                                        <TextField id=\"outlined-account-password-original\" label=\"Original Password\" variant=\"outlined\" />\n                                    </ListItem>\n                                    <ListItem>\n                                        <ListItemText primary=\"New Password: \" />\n                                        <TextField id=\"outlined-account-password-new\" label=\"New Password\" variant=\"outlined\" />\n                                    </ListItem>\n                                    <ListItem>\n                                        <Button variant=\"contained\" color=\"primary\" size=\"medium\">\n                                            Submit\n                                        </Button>\n                                    </ListItem>\n                                </List>\n                            </CardContent>\n                        </Card>\n                    </Grid>\n                </Grid>\n            </main>\n        </div>\n    );\n}\n\nRegisterRoutes(Accountpage, \"/account\", \"/Accountpage\", \"/AccountPage\", \"/accountpage\");\nexport default Accountpage;\n","import React from \"react\";\nimport {\n    Grid,\n    Card,\n    CardContent,\n    List,\n    ListItem,\n    ListItemText,\n    Typography\n} from \"@material-ui/core\";\n\nimport Navigation from \"../components/Navigation\";\nimport CreateStyles from \"../util/Stylesheet\";\nimport { RegisterRoutes } from \"../util/RouteBuilder\";\n\nfunction Aboutpage() {\n\n    const Styles = CreateStyles();\n    \n    return (\n        <div className={Styles.root}>\n            <Navigation TopbarMessage=\"About\" Styles={Styles}/>\n            <main className={Styles.content}>\n                <div className={Styles.toolbar} />\n                <Grid container spacing={3} >\n                    <Grid item xs={12} sm={6} >\n                        <Card className={Styles.card}>\n                            <CardContent>\n                                <Typography className={Styles.title} variant=\"h2\">\n                                    Back-End\n                                </Typography>\n                                <List>\n                                    <ListItem>\n                                        <ListItemText primary=\"Brooke Tingley\" />\n                                        <ListItemText><a href=\"https://github.com/btingley\">Github</a></ListItemText>\n                                    </ListItem>\n                                    <ListItem>\n                                        <ListItemText primary=\"Rob Doster\" />\n                                        <ListItemText><a href=\"https://github.com/rdoster13\">Github</a></ListItemText>\n                                    </ListItem>\n                                    <ListItem>\n                                        <ListItemText primary=\"Ralph Greaves\" />\n                                        <ListItemText><a href=\"https://github.com/regreaves\">Github</a></ListItemText>\n                                    </ListItem>\n                                </List>\n                            </CardContent>\n                        </Card>\n                    </Grid>\n                    <Grid item xs={12} sm={6} >\n                        <Card className={Styles.card}>\n                            <CardContent>\n                                <Typography className={Styles.title} variant=\"h2\">\n                                    Front-End\n                                </Typography>\n                                <List>\n                                    <ListItem>\n                                        <ListItemText primary=\"Alex Louderback\" />\n                                        <ListItemText><a href=\"https://github.com/alouderback\">Github</a></ListItemText>\n                                        <ListItemText><a href=\"https://www.linkedin.com/in/alex-louderback-a2a599149/\">Linkedin</a></ListItemText>\n                                    </ListItem>\n                                    <ListItem>\n                                        <ListItemText primary=\"Cayden Reynolds\" />\n                                        <ListItemText><a href=\"https://github.com/caydenreynolds\">Github</a></ListItemText>\n                                    </ListItem>\n                                    <ListItem>\n                                        <ListItemText primary=\"Brandon Miller\" />\n                                        <ListItemText><a href=\"https://github.com/ScratchnSniff0\">Github</a></ListItemText>\n                                        <ListItemText><a href=\"https://www.linkedin.com/in/brandon-m-miller\">Linkedin</a></ListItemText>\n                                    </ListItem>\n                                </List>\n                            </CardContent>\n                        </Card>\n                    </Grid>\n                    <Grid item xs={12} sm={6} >\n                        <Card className={Styles.card}>\n                            <CardContent>\n                                <Typography className={Styles.title} variant=\"h2\">\n                                    About\n                                </Typography>\n                                <Typography variant=\"h2\">\n                                    Made at York College of Pennsylvania by very hard working students.\n                                </Typography>\n                            </CardContent>\n                        </Card>\n                    </Grid>\n                </Grid>\n            </main>\n        </div>\n    );\n}\n\nRegisterRoutes(Aboutpage, \"/about\", \"/aboot\", \"/About\");\nexport default Aboutpage;\n","import React, { Component } from 'react';\nimport { BrowserRouter } from \"react-router-dom\";\n\nimport {BuildRoutes} from './util/RouteBuilder';\n\n/*  This is the only real weirdness with my solution. You MUST import all of the pages here, or the routes will not be built\n    Fortunately, importing for side effects isn't entirely unheard of *cough* jsx *cough* \n*/\nimport HomePage from './pages/Homepage';\nimport FactoryPage from './pages/Factorypage';\nimport PlayerPage from './pages/Playerpage';\nimport LoginSignUpPage from './pages/Loginsignuppage';\nimport AccountPage from './pages/Accountpage';\nimport AboutPage from './pages/Aboutpage'\nimport { ThemeProvider } from '@material-ui/core';\nimport { Theme } from \"./util/Stylesheet\"\n\nclass App extends Component {\n  render() {\n    return (\n      <ThemeProvider theme={ Theme }> \n          <BrowserRouter>\n            <BuildRoutes/>\n          </BrowserRouter>\n      </ThemeProvider>\n    );\n  }\n}\nexport default App","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}